{"version":3,"sources":["webpack://gameservice-sdk/webpack/universalModuleDefinition","webpack://gameservice-sdk/./node_modules/axios/index.js","webpack://gameservice-sdk/./node_modules/axios/lib/adapters/xhr.js","webpack://gameservice-sdk/./node_modules/axios/lib/axios.js","webpack://gameservice-sdk/./node_modules/axios/lib/cancel/Cancel.js","webpack://gameservice-sdk/./node_modules/axios/lib/cancel/CancelToken.js","webpack://gameservice-sdk/./node_modules/axios/lib/cancel/isCancel.js","webpack://gameservice-sdk/./node_modules/axios/lib/core/Axios.js","webpack://gameservice-sdk/./node_modules/axios/lib/core/InterceptorManager.js","webpack://gameservice-sdk/./node_modules/axios/lib/core/buildFullPath.js","webpack://gameservice-sdk/./node_modules/axios/lib/core/createError.js","webpack://gameservice-sdk/./node_modules/axios/lib/core/dispatchRequest.js","webpack://gameservice-sdk/./node_modules/axios/lib/core/enhanceError.js","webpack://gameservice-sdk/./node_modules/axios/lib/core/mergeConfig.js","webpack://gameservice-sdk/./node_modules/axios/lib/core/settle.js","webpack://gameservice-sdk/./node_modules/axios/lib/core/transformData.js","webpack://gameservice-sdk/./node_modules/axios/lib/defaults.js","webpack://gameservice-sdk/./node_modules/axios/lib/helpers/bind.js","webpack://gameservice-sdk/./node_modules/axios/lib/helpers/buildURL.js","webpack://gameservice-sdk/./node_modules/axios/lib/helpers/combineURLs.js","webpack://gameservice-sdk/./node_modules/axios/lib/helpers/cookies.js","webpack://gameservice-sdk/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://gameservice-sdk/./node_modules/axios/lib/helpers/isAxiosError.js","webpack://gameservice-sdk/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://gameservice-sdk/./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack://gameservice-sdk/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://gameservice-sdk/./node_modules/axios/lib/helpers/spread.js","webpack://gameservice-sdk/./node_modules/axios/lib/utils.js","webpack://gameservice-sdk/./src/GameService/Achievements/index.ts","webpack://gameservice-sdk/./src/GameService/Assets/index.ts","webpack://gameservice-sdk/./src/GameService/Authentication/index.ts","webpack://gameservice-sdk/./src/GameService/GSLive/Chats/index.ts","webpack://gameservice-sdk/./src/GameService/GSLive/Chats/models.ts","webpack://gameservice-sdk/./src/GameService/GSLive/Controllers/Command/index.ts","webpack://gameservice-sdk/./src/GameService/GSLive/Controllers/Command/models.ts","webpack://gameservice-sdk/./src/GameService/GSLive/Controllers/RealTime/index.ts","webpack://gameservice-sdk/./src/GameService/GSLive/Controllers/RealTime/models.ts","webpack://gameservice-sdk/./src/GameService/GSLive/Controllers/ُTurnBased/index.ts","webpack://gameservice-sdk/./src/GameService/GSLive/Controllers/ُTurnBased/models.ts","webpack://gameservice-sdk/./src/GameService/GSLive/RealTime/index.ts","webpack://gameservice-sdk/./src/GameService/GSLive/RealTime/models.ts","webpack://gameservice-sdk/./src/GameService/GSLive/TurnBased/index.ts","webpack://gameservice-sdk/./src/GameService/GSLive/TurnBased/models.ts","webpack://gameservice-sdk/./src/GameService/GSLive/index.ts","webpack://gameservice-sdk/./src/GameService/Leaderboards/index.ts","webpack://gameservice-sdk/./src/GameService/Player/index.ts","webpack://gameservice-sdk/./src/GameService/Save/index.ts","webpack://gameservice-sdk/./src/GameService/Social/Friends/index.ts","webpack://gameservice-sdk/./src/GameService/Social/index.ts","webpack://gameservice-sdk/./src/GameService/Table/index.ts","webpack://gameservice-sdk/./src/GameService/index.ts","webpack://gameservice-sdk/./src/Utils/Consts.ts","webpack://gameservice-sdk/./src/Utils/Errors.ts","webpack://gameservice-sdk/./src/Utils/Logger.ts","webpack://gameservice-sdk/./src/Utils/Statistics.ts","webpack://gameservice-sdk/./node_modules/uuid/index.js","webpack://gameservice-sdk/./node_modules/uuid/lib/bytesToUuid.js","webpack://gameservice-sdk/./node_modules/uuid/lib/rng-browser.js","webpack://gameservice-sdk/./node_modules/uuid/v1.js","webpack://gameservice-sdk/./node_modules/uuid/v4.js","webpack://gameservice-sdk/./node_modules/ws/browser.js","webpack://gameservice-sdk/webpack/bootstrap","webpack://gameservice-sdk/./src/index.ts"],"names":["root","factory","exports","module","define","amd","self","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","config","Promise","resolve","reject","requestData","data","requestHeaders","headers","isFormData","request","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","url","open","method","toUpperCase","params","paramsSerializer","timeout","onreadystatechange","readyState","status","responseURL","indexOf","responseHeaders","getAllResponseHeaders","response","responseType","responseText","statusText","onabort","onerror","ontimeout","timeoutErrorMessage","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","val","key","toLowerCase","setRequestHeader","isUndefined","e","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","bind","Axios","mergeConfig","createInstance","defaultConfig","context","instance","prototype","extend","axios","create","instanceConfig","defaults","Cancel","CancelToken","isCancel","all","promises","spread","isAxiosError","default","message","this","toString","__CANCEL__","executor","TypeError","resolvePromise","token","reason","throwIfRequested","source","c","value","InterceptorManager","dispatchRequest","interceptors","arguments","chain","interceptor","unshift","fulfilled","rejected","push","length","shift","getUri","replace","handlers","use","eject","id","fn","h","isAbsoluteURL","combineURLs","requestedURL","enhanceError","code","error","Error","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","toJSON","name","description","number","fileName","lineNumber","columnNumber","stack","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","target","isPlainObject","isArray","slice","mergeDeepProperties","prop","axiosKeys","concat","otherKeys","Object","keys","filter","validateStatus","fns","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","call","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","JSON","stringify","parse","maxContentLength","maxBodyLength","thisArg","args","Array","i","apply","encode","serializedParams","parts","v","isDate","toISOString","join","hashmarkIndex","relativeURL","write","expires","path","domain","secure","cookie","isNumber","Date","toGMTString","isString","document","match","RegExp","decodeURIComponent","remove","now","test","payload","originURL","msie","navigator","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","window","location","requestURL","parsed","normalizedName","ignoreDuplicateOf","split","line","trim","substr","callback","arr","getPrototypeOf","isFunction","obj","l","hasOwnProperty","constructor","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","result","assignValue","a","b","str","stripBOM","content","charCodeAt","superThis","get","Url","Api","Endpoint","GetAchievements","Authentication","gameToken","Log","achievement","msg","achievementid","post","GetAchievementsv2","new","tag","DownloadAssets","ClientID","userToken","gameID","Email","Password","Login","v4","Start","Token","NickName","PhoneNumber","SMSAuth","ClientSecret","Code","SMSAuthCallback","Statistics","game","_id","GSLive","Command","Initilize","OnSubscribeChannel","channelName","OnChatReceived","ChannelsSubscribed","ChannelsRecentMessages","ChannelMembers","PendingMessages","OnUnSubscribeChannel","pkt","Packet","SetHead","Actions","ActionSubscribe","SetToken","commandToken","SetMsg","Send","Message","SetTo","SetText","ActionChat","SetData","ToString","memberID","ActionPrivateChat","ActionGetSubscribedChannels","Data","SetID","ActionGetLastGroupMessages","skip","limit","SetMin","SetMax","ActionGetMembersOfChannel","ActionGetPendingMessages","ActionUnSubscribe","IsPrivate","To","From","Text","Time","Channel","input","inputJ","SetIsPrivate","SetFrom","SetTime","SetChannel","Cast","isInAutoMatchQueue","OnConnect","Payload","SetGameID","ActionAuth","OnReceive","event","packet","Parse","GetHead","GetToken","onReady","msgPublic","GetData","Chats","GetChannel","GetFrom","GetText","msgPrivate","GetMsg","msgs","members","channels","pendings","ActionAutoMatch","autoMatchInfo","TurnBased","OnAutoMatchUpdated","RealTime","LeftWaitingQ","OnAutoMatchCanceled","ActionGetRooms","ActionJoinRoom","start","StartGame","Room","TurnbasedController","Area","Port","RealTimeController","Hash","console","onDisconnect","wasClean","CommandConnection","WebSocket","onopen","onmessage","onclose","err","serilized","Head","Msg","GameID","ID","User","Invite","Name","Min","Max","SyncMode","Role","Private","Persist","Extra","inputS","areaT","MemerID","cast","Protocol","PublicKey","realtimeToken","BigInt","RoomID","ConnectHash","AuthPayload","Action","ToBuffer","Deserialize","Buffer","from","ActionPublicMessage","NewMessageReceived","MessageInfo","MessageType","SendType","GProtocolSendType","Type","ClientReceiveTime","ClientSendTime","Export","ActionPrivateMessage","msgPrv","ActionJoin","JoinPayload","BufferToString","OnJoinedRoom","ActionMembersDetail","RoomMembersDetailReceived","ActionLeave","member","OnLeaveRoom","user","isMe","Connection","close","ActionEventMessage","evM","ev","EventPayload","OnPropertyEvent","By","SenderID","Value","GetExtra","ActionRoomInfo","roomInfoS","roomInfo","CurrentRoomInfoReceived","binaryType","StringToBuffer","charList","uintArray","Uint8Array","buff","encodedString","String","fromCharCode","escape","Operations","Types","_Token","_Type","Serialize","binary","compress","_Action","Number","havePayload","haveClientSendTime","t","alloc","writeUInt16LE","valueOf","writeBigUInt64LE","writeBigInt64LE","offset","payloadLen","readUInt8","readUInt16LE","readBigUInt64LE","readBigInt64LE","_Extra","_SenderID","_ReceiverID","_Payload","type","action","ReceiverID","haveSenderID","haveRecieverID","haveExtra","ReceiverIDBuff","SenderIDBuff","senderLen","receiverLen","extraLen","haveSender","haveReceiver","JoinType","UserJoined","JoinMemberOrder","room","turnbasedToken","joinData","joinDetail","JoinDetail","ActionTakeTurn","turnData","OnTakeTurn","ActionChooseNext","nextData","OnChoosedNext","ActionVote","voteDetail","vote","VoteDetail","OnVoteReceived","Member","Outcomes","ActionAcceptVote","OnComplete","ActionGetUsers","OnRoomMembersDetailReceived","ActionCurrentTurnDetail","currentTurn","OnCurrentTurnMember","ModifyValue","propertyChange","PropertyChange","OnPropertyUpdated","GetRoomInfo","OnCurrentRoomInfoReceived","_Name","_Private","_Persist","Logo","Creator","Status","NumOfMembers","Variables","CreatedAt","_ID","_Logo","_Creator","_Min","_Max","_Role","_Status","_NumOfMembers","_Variables","_CreatedAt","PropertyType","Sender","JoinOrder","AcceptCount","Outcome","OnReconnected","OnAvailableRoomsReceived","OnFindMemberReceived","OnInvitationSent","options","maxPlayer","minPlayer","SetName","roomName","SetPassword","roomPassword","SetRole","role","SetPersist","isPersist","SetPrivate","isPrivate","SetExtra","extra","SetSyncMode","ActionCreateRoom","roomID","query","SetUser","ActionFindUser","userID","ActionInviteUser","ActionGetInviteList","inviteID","SetInvite","ActionAcceptInvite","sendType","recieverID","Property","SetMemberProperty","propertyName","DelMemberProperty","SetRoomProperty","DelRoomProperty","ActionGetRoomSnapshot","NameLength","ValueLength","OnInviteInboxReceived","whoIsNext","Next","dataIn","outcomes","outcomesS","map","Rank","_Value","_Rank","Leaderboard","leaderboard","leaderboardId","score","LeaderboardV2","scores","GetCurrentPlayer","memberId","LastLoginInfo","put","currentPassword","newPassword","GetCurrentUser","Devices","deviceId","saveName","saveData","SaveGame","delete","Friends","count","list","tableId","isGlobal","find","rowsOwner","sort","Table","aggrigation","itemId","newItem","editedItem","clientId","clientSecret","Verbose","Internal","InvalidInput","Assets","Achievements","Leaderboards","Player","Save","Social","OPEN","ApiUrls","DBaaSUrls","CommandUrls","DBaaS","CommandActions","TurnBasedActions","RealTimeActions","log","statis","DeviceID","v1","uuid","byteToHex","buf","bth","getRandomValues","crypto","msCrypto","rnds8","rnds","r","Math","random","_nodeId","_clockseq","rng","bytesToUuid","_lastMSecs","_lastNSecs","node","clockseq","seedBytes","msecs","getTime","nsecs","dt","tl","tmh","n","ii","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","GameService"],"mappings":"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","file":"gameservice-sdk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"gameservice-sdk\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gameservice-sdk\"] = factory();\n\telse\n\t\troot[\"gameservice-sdk\"] = factory();\n})(self, function() {\nreturn ","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","import { Achievement } from './models';\nimport { Url } from '../../Utils/Consts';\nimport { Log } from '../../Utils/Logger';\nimport axios from 'axios';\nimport { GameService } from '..';\n\n\nexport class Achievements {\n    constructor(public superThis: GameService) { }\n\n    async GetAchievements(): Promise<Achievement[]> {\n        try {\n            let { data } = await axios.get(`${Url.Api.Endpoint}${Url.Api.GetAchievements}`, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"GetAchievements\", data);\n\n            return data.achievement;\n        } catch (e) {\n            if (e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n    async Unlock(achievementid: string): Promise<Achievement> {\n        try {\n            let { data } = await axios.post(`${Url.Api.Endpoint}${Url.Api.GetAchievementsv2}/${achievementid}`, null, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"Unlock\", data);\n\n            return data.new;\n        } catch (e) {\n            if (e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n}","import { AssetInfoData } from './models';\nimport { Url } from '../../Utils/Consts';\nimport { Log } from '../../Utils/Logger';\nimport axios from 'axios';\nimport { GameService } from '../index';\n\nexport class Assets {\n    constructor(public superThis: GameService) { }\n    \n    async GetAssetInfo(tag: string): Promise<AssetInfoData> {\n        try {\n            let { data } = await axios.get(`${Url.Api.Endpoint}${Url.Api.DownloadAssets}/${this.superThis.ClientID}/datapack/?tag=${tag}`, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"GetAssetInfo\", data);\n\n            return data.data;\n        } catch (e) {\n            if (e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n}","import { Actions, Url } from '../../Utils/Consts';\nimport { Log } from '../../Utils/Logger';\nimport * as Statistics from '../../Utils/Statistics';\nimport { GameService } from '../index';\nimport { v4 } from 'uuid';\nimport axios from 'axios';\n\nexport class Authentication {\n    userToken: string = \"\";\n    gameToken: string = \"\";\n    gameID: string = \"\";\n\n    constructor(public superThis: GameService) { }\n\n    async Login(Email: string, Password: string): Promise<string> {\n        try {\n            let { data } = await axios.post(`${Url.Api.Endpoint}${Url.Api.Login}`, {\n                \"email\": Email,\n                \"password\": Password,\n                \"device_id\": v4(),\n            })\n\n            // Log(\"Login\", data);\n\n            this.userToken = data.token;\n\n            await this.Start()\n\n            return data.token;\n        } catch (e) {\n            if (e && e.response) {\n                if (e.response.data)\n                    throw e.response.data\n                throw e.response\n            } else\n                throw e\n        }\n    }\n    async LoginWithToken(Token: string) {\n        this.userToken = Token;\n        await this.Start()\n    }\n    async SignUp(NickName: string, Email: string, Password: string): Promise<string> {\n        try {\n            let { data } = await axios.post(`${Url.Api.Endpoint}${Url.Api.Login}`, {\n                \"mode\": \"register\",\n                \"name\": NickName,\n                \"client_id\": this.superThis.ClientID,\n                \"email\": Email,\n                \"password\": Password,\n                \"device_id\": v4(),\n            })\n\n            Log(\"SignUp\", data);\n\n            this.userToken = data.token;\n\n            await this.Start()\n\n            return data.token;\n        } catch (e) {\n            if (e && e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n    async CheckSmsStatus(): Promise<boolean> {\n        return true\n    }\n    async SendLoginCodeSms(PhoneNumber: string): Promise<boolean> {\n        try {\n            let { data } = await axios.post(`${Url.Api.Endpoint}${Url.Api.SMSAuth}`, {\n                \"game\": this.superThis.ClientID,\n                \"secret\": this.superThis.ClientSecret,\n                \"phone_number\": PhoneNumber,\n            })\n\n            Log(\"SendLoginCodeSms\", data);\n\n            return true;\n        } catch (e) {\n            if (e && e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n    async LoginOrSignUpWithSms(NickName: string, PhoneNumber: string, Code: string): Promise<string> {\n        try {\n            let { data } = await axios.post(`${Url.Api.Endpoint}${Url.Api.SMSAuthCallback}`, {\n                \"name\": NickName,\n                \"code\": Code,\n                \"phone_number\": PhoneNumber,\n                \"device_id\": v4(),\n            })\n\n            Log(\"SendLoginCodeSms\", data);\n\n            return data.token;\n        } catch (e) {\n            if (e && e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n    async LoginAsGuest(): Promise<string> {\n        try {\n            let { data } = await axios.post(`${Url.Api.Endpoint}${Url.Api.Login}`, {\n                \"device_id\": v4(),\n            })\n\n            Log(\"LoginAsGuest\", data);\n\n            this.userToken = data.token;\n\n            await this.Start()\n\n            return data.token;\n        } catch (e) {\n            if (e && e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n    private async Start() {\n        try {\n            let { data } = await axios.post(`${Url.Api.Endpoint}${Url.Api.Start}`, {\n                \"game\": this.superThis.ClientID,\n                \"system_info\": Statistics.get(),\n                \"secret\": this.superThis.ClientSecret,\n                \"token\": this.userToken\n            })\n\n            // Log(\"Start\", data);\n\n            this.gameToken = data.token;\n            this.gameID = data.game._id;\n\n            await this.superThis.GSLive.Command.Initilize();\n\n            return data.token;\n        } catch (e) {\n            // if (this.superThis.Verbose) \n            if (e && e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n}","import { GameService } from '../..';\nimport { Log } from '../../../Utils/Logger';\nimport { Actions } from '../../../Utils/Consts';\nimport { Data, Packet, Payload } from '../Controllers/Command/models';\nimport { Message } from './models';\n\nexport class Chats {\n    constructor(public superThis: GameService) { }\n\n    public async SubscribeChannel(channelName: string) {\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionSubscribe);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetMsg(channelName)\n        pkt.Send();\n    }\n    public OnSubscribeChannel: (channelName: string) => void = (channelName) => { }\n\n    public async SendChannelMessage(channelName: string, message: string) {\n        let payload = new Message(this.superThis);\n        payload.SetTo(channelName);\n        payload.SetText(message);\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionChat);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetData(payload.ToString())\n        pkt.Send();\n    }\n\n    public async SendPrivateMessage(memberID: string, message: string) {\n        let payload = new Message(this.superThis);\n        payload.SetTo(memberID);\n        payload.SetText(message);\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionPrivateChat);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetData(payload.ToString())\n        pkt.Send();\n    }\n    public OnChatReceived: (channelName: string, sender: object, message: string, isPrivate: boolean) => void = () => { };\n\n    public async GetChannelsSubscribed() {\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionGetSubscribedChannels);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.Send();\n    }\n    public ChannelsSubscribed: (channels: object[]) => void = () => { };\n\n    public async GetChannelRecentMessages(channelName: string) {\n        let payload = new Data(this.superThis);\n        payload.SetID(channelName);\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionGetLastGroupMessages);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetData(payload.ToString())\n        pkt.Send();\n    }\n    public ChannelsRecentMessages: (messages: object[]) => void = () => { };\n\n    public async GetChannelMembers(channelName: string, skip: number = 0, limit: number = 25) {\n        let payload = new Data(this.superThis);\n        payload.SetID(channelName);\n        payload.SetMin(skip)\n        payload.SetMax(limit)\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionGetMembersOfChannel);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetData(payload.ToString())\n        pkt.Send();\n    }\n    public ChannelMembers: (members: object[]) => void = () => { };\n\n    public async GetPendingMessages() {\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionGetPendingMessages);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.Send();\n    }\n    public PendingMessages: (pendingMessages: object[]) => void = () => { };\n\n    public async UnSubscribeChannel(channelName: string) {\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionUnSubscribe);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetMsg(channelName)\n        pkt.Send();\n    }\n    public OnUnSubscribeChannel: Function = () => { };\n}\n","import { GameService } from '../../index';\n\nexport class Message {\n    constructor(public superThis: GameService) { }\n\n    private IsPrivate: boolean | undefined\n    GetIsPrivate(): boolean | undefined {\n        return this.IsPrivate;\n    }\n    SetIsPrivate(IsPrivate: boolean) {\n        this.IsPrivate = IsPrivate;\n    }\n\n    private To: string | undefined\n    GetTo(): string | undefined {\n        return this.To;\n    }\n    SetTo(To: string) {\n        this.To = To;\n    }\n\n    private From: object | undefined\n    GetFrom(): object | undefined {\n        return this.From;\n    }\n    SetFrom(From: object) {\n        this.From = From;\n    }\n\n\n    private Text: string | undefined\n    GetText(): string | undefined {\n        return this.Text;\n    }\n    SetText(Text: string) {\n        this.Text = Text;\n    }\n\n    private Time: number | undefined\n    GetTime(): number | undefined {\n        return this.Time;\n    }\n    SetTime(Time: number) {\n        this.Time = Time;\n    }\n\n    private Channel: string | undefined\n    GetChannel(): string | undefined {\n        return this.Channel;\n    }\n    SetChannel(Channel: string) {\n        this.Channel = Channel;\n    }\n\n    private Cast() {\n        return {\n            \"0\": this.IsPrivate,\n            \"1\": this.To,\n            \"2\": this.From,\n            \"3\": this.Text,\n            \"4\": this.Time,\n            \"5\": this.Channel\n        }\n    }\n\n    public Parse(input: any) {\n        let inputJ = JSON.parse(input)\n        this.SetIsPrivate(inputJ[\"0\"]);\n        this.SetTo(inputJ[\"1\"]);\n        this.SetFrom(inputJ[\"2\"]);\n        this.SetText(inputJ[\"3\"]);\n        this.SetTime(inputJ[\"4\"]);\n        this.SetChannel(inputJ[\"5\"]);\n    }\n\n    ToString(): string {\n        return JSON.stringify(this.Cast())\n    }\n}","import { Actions, Url } from '../../../../Utils/Consts';\nimport { GameService } from '../../../index';\nimport nWebSocket from 'ws';\nimport { Area, Packet, Payload, StartGame } from './models';\nimport { Message } from '../../Chats/models';\nimport { Log } from '../../../../Utils/Logger';\nimport { GSLive } from '../..';\n\nexport class Command {\n    constructor(public superThis: GameService) { }\n\n    commandToken: string = \"\";\n    isInAutoMatchQueue = false;\n\n    public Initilize() {\n        if (typeof window === 'undefined') {\n            Log(\"[Command]\", `[Node] [Connecting] [${Url.Command.Endpoint}]`);\n            GSLive.CommandConnection = new nWebSocket(Url.Command.Endpoint);\n        } else {\n            Log(\"[Command]\", `[Browser] [Connecting] [${Url.Command.Endpoint}]`);\n            GSLive.CommandConnection = new WebSocket(Url.Command.Endpoint);\n        }\n        GSLive.CommandConnection!.onopen = this.OnConnect\n        GSLive.CommandConnection!.onmessage = this.OnReceive;\n        GSLive.CommandConnection!.onclose = this.onDisconnect;\n\n        GSLive.CommandConnection!.onerror = (err: nWebSocket.ErrorEvent) => {\n            throw err;\n        };\n    }\n\n    protected OnConnect = (e: nWebSocket.OpenEvent) => {\n        // Send Auth pkt\n        let payload = new Payload(this.superThis);\n        payload.SetGameID(this.superThis.Authentication.gameID);\n        payload.SetToken(this.superThis.Authentication.userToken);\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionAuth);\n        pkt.SetData(payload.ToString())\n        pkt.Send();\n    }\n\n    protected OnReceive = async (event: nWebSocket.MessageEvent) => {\n        // Log(\"[Command]\", `[OnReceive]: ${ event.data }`);\n\n        let packet = new Packet(this.superThis)\n        packet.Parse(event.data);\n\n        switch (packet.GetHead()) {\n            case Actions.Command.ActionAuth:\n                this.commandToken = packet.GetToken()!;\n                this.superThis.onReady()\n                break\n            // ---- Chats ---- //\n            case Actions.Command.ActionChat:\n                let msgPublic = new Message(this.superThis);\n                msgPublic.Parse(packet.GetData()!)\n                this.superThis.GSLive.Chats.OnChatReceived(msgPublic.GetChannel()!, msgPublic.GetFrom()!, msgPublic.GetText()!, false)\n                break\n            case Actions.Command.ActionPrivateChat:\n                let msgPrivate = new Message(this.superThis);\n                msgPrivate.Parse(packet.GetData()!)\n                this.superThis.GSLive.Chats.OnChatReceived(msgPrivate.GetChannel()!, msgPrivate.GetFrom()!, msgPrivate.GetText()!, true)\n                break\n            case Actions.Command.ActionSubscribe:\n                this.superThis.GSLive.Chats.OnSubscribeChannel(packet.GetMsg()!)\n                break\n            case Actions.Command.ActionUnSubscribe:\n                this.superThis.GSLive.Chats.OnUnSubscribeChannel()\n                break\n            case Actions.Command.ActionGetLastGroupMessages:\n                let msgs: object[] = JSON.parse(packet.GetData()!);\n                this.superThis.GSLive.Chats.ChannelsRecentMessages(msgs)\n                break\n            case Actions.Command.ActionGetMembersOfChannel:\n                let members: object[] = JSON.parse(packet.GetData()!);\n                this.superThis.GSLive.Chats.ChannelMembers(members)\n                break\n            case Actions.Command.ActionGetSubscribedChannels:\n                let channels: object[] = JSON.parse(packet.GetData()!);\n                this.superThis.GSLive.Chats.ChannelsSubscribed(channels)\n                break\n            case Actions.Command.ActionGetPendingMessages:\n                let pendings: object[] = JSON.parse(packet.GetData()!);\n                this.superThis.GSLive.Chats.PendingMessages(pendings)\n                break\n\n            // ---- Create Room ---- //\n            case Actions.Command.ActionAutoMatch:\n                let autoMatchInfo;\n                if (packet.GetData() != undefined) {\n                    autoMatchInfo = JSON.parse(packet.GetData()!)\n                }\n                if (packet.GetMsg()) {\n                    autoMatchInfo = packet.GetMsg();\n                }\n                this.superThis.GSLive.TurnBased.OnAutoMatchUpdated(autoMatchInfo);\n                this.superThis.GSLive.RealTime.OnAutoMatchUpdated(autoMatchInfo);\n                this.isInAutoMatchQueue = true;\n                break\n            case Actions.Command.LeftWaitingQ:\n                this.superThis.GSLive.TurnBased.OnAutoMatchCanceled(packet.GetMsg() || \"\")\n                this.superThis.GSLive.RealTime.OnAutoMatchCanceled(packet.GetMsg() || \"\")\n                this.isInAutoMatchQueue = false;\n                break\n            case Actions.Command.ActionGetRooms:\n\n                break\n            case Actions.Command.ActionJoinRoom:\n                let joinInfo = JSON.parse(packet.GetData()!)\n                // connect to relay\n                let start = new StartGame();\n                start.parse(packet.GetData()!)\n                if (start.Room![\"syncMode\"] == 1)\n                    await this.superThis.GSLive.TurnbasedController.Initilize(start.Room![\"_id\"], start.Area!.Endpoint, start.Area!.Port)\n                else\n                    await this.superThis.GSLive.RealTimeController.Initilize(start.Room![\"_id\"], start.Area?.Hash!, start.Area!.Endpoint, start.Area!.Port)\n                this.isInAutoMatchQueue = false;\n                break\n            // case Actions.Command.ActionKickUser:\n\n            //     break\n\n            case Actions.Error:\n                console.error(`[Error][Msg: ${packet.GetMsg()}]`)\n                break\n        }\n    }\n\n    private onDisconnect = (event: nWebSocket.CloseEvent) => {\n        if (event.wasClean) {\n            Log(\"[Command]\", `[close] Connection closed cleanly, code = ${event.code} reason = ${event.reason}`);\n        } else {\n            Log(\"[Command]\", '[close] Connection died');\n        }\n        this.commandToken = \"\";\n    }\n}","import { GSLive } from '../..';\nimport { GameService } from '../../../index';\n\nexport class Packet {\n    constructor(public superThis: GameService) { }\n\n    public Parse(input: any) {\n        let inputJ = JSON.parse(input)\n        this.SetToken(inputJ[\"0\"]);\n        this.SetHead(inputJ[\"1\"]);\n        this.SetData(inputJ[\"2\"]);\n        this.SetMsg(inputJ[\"3\"]);\n    }\n\n    private Token: string | undefined\n    public GetToken(): string | undefined {\n        return this.Token;\n    }\n    public SetToken(Token: string) {\n        this.Token = Token;\n    }\n\n    private Head: number | undefined\n    public GetHead(): number | undefined {\n        return this.Head;\n    }\n    public SetHead(Head: number) {\n        this.Head = Head;\n    }\n\n    private Data: string | undefined\n    public GetData(): string | undefined {\n        return this.Data;\n    }\n    public SetData(Data: string) {\n        this.Data = Data;\n    }\n\n    private Msg: string | undefined\n    public GetMsg(): string | undefined {\n        return this.Msg;\n    }\n    public SetMsg(Msg: string) {\n        this.Msg = Msg;\n    }\n\n    private Cast() {\n        return {\n            \"0\": this.Token,\n            \"1\": this.Head,\n            \"2\": this.Data,\n            \"3\": this.Msg\n        }\n    }\n    ToString(): string {\n        return JSON.stringify(this.Cast())\n    }\n    Send = () => {\n        let serilized = this.ToString()\n        if (GSLive.CommandConnection === undefined)\n            throw \"User not connected to Command Server\";\n\n        GSLive.CommandConnection!.send(serilized);\n    }\n}\n\nexport class Payload {\n    constructor(public superThis: GameService) { }\n\n    private GameID: string | undefined\n    GetGameID(): string | undefined {\n        return this.GameID;\n    }\n    SetGameID(GameID: string) {\n        this.GameID = GameID;\n    }\n\n    private Token: string | undefined\n    GetToken(): string | undefined {\n        return this.Token;\n    }\n    SetToken(Token: string) {\n        this.Token = Token;\n    }\n\n    private Cast() {\n        return {\n            \"0\": this.GameID,\n            \"1\": this.Token\n        }\n    }\n\n    ToString(): string {\n        return JSON.stringify(this.Cast())\n    }\n}\n\nexport class Data {\n    constructor(public superThis: GameService) { }\n\n    private ID: string | undefined\n    GetID(): string | undefined {\n        return this.ID;\n    }\n    SetID(ID: string) {\n        this.ID = ID;\n    }\n\n    private User: string | undefined\n    GetUser(): string | undefined {\n        return this.User;\n    }\n    SetUser(User: string) {\n        this.User = User;\n    }\n\n    private Invite: string | undefined\n    GetInvite(): string | undefined {\n        return this.Invite;\n    }\n    SetInvite(Invite: string) {\n        this.Invite = Invite;\n    }\n\n    private Name: string | undefined\n    GetName(): string | undefined {\n        return this.Name;\n    }\n    SetName(Name: string) {\n        this.Name = Name;\n    }\n\n    private Head: string | undefined\n    GetHead(): string | undefined {\n        return this.Head;\n    }\n    SetHead(Head: string) {\n        this.Head = Head;\n    }\n\n    private Min: number | undefined\n    GetMin(): number | undefined {\n        return this.Min;\n    }\n    SetMin(Min: number) {\n        this.Min = Min;\n    }\n\n    private Max: number | undefined\n    GetMax(): number | undefined {\n        return this.Max;\n    }\n    SetMax(Max: number) {\n        this.Max = Max;\n    }\n\n    private SyncMode: number | undefined\n    GetSyncMode(): number | undefined {\n        return this.SyncMode;\n    }\n    SetSyncMode(SyncMode: number) {\n        this.SyncMode = SyncMode;\n    }\n\n    private Role: string | undefined\n    GetRole(): string | undefined {\n        return this.Role;\n    }\n    SetRole(Role: string) {\n        this.Role = Role;\n    }\n\n    private Private: boolean | undefined\n    GetPrivate(): boolean | undefined {\n        return this.Private;\n    }\n    SetPrivate(Private: boolean) {\n        this.Private = Private;\n    }\n\n    private Persist: boolean | undefined\n    GetPersist(): boolean | undefined {\n        return this.Persist;\n    }\n    SetPersist(Persist: boolean) {\n        this.Persist = Persist;\n    }\n\n    private Extra: string | undefined\n    GetExtra(): string | undefined {\n        return this.Extra;\n    }\n    SetExtra(Extra: string) {\n        this.Extra = Extra;\n    }\n\n    private Password: string | undefined\n    GetPassword(): string | undefined {\n        return this.Password;\n    }\n    SetPassword(Password: string) {\n        this.Password = Password;\n    }\n\n    Parse(inputJ: any) {\n        this.ID = inputJ[0];\n        this.User = inputJ[1];\n        this.Invite = inputJ[2];\n        this.Name = inputJ[3];\n        this.Head = inputJ[4];\n        this.Min = inputJ[5];\n        this.Max = inputJ[6];\n        this.SyncMode = inputJ[7];\n        this.Role = inputJ[8];\n        this.Private = inputJ[9];\n        this.Persist = inputJ[10];\n        this.Extra = inputJ[11];\n        this.Password = inputJ[12];\n    }\n\n    Export() {\n        return {\n            ID: this.ID,\n            User: this.User,\n            Invite: this.Invite,\n            Name: this.Name,\n            Head: this.Head,\n            Min: this.Min,\n            Max: this.Max,\n            SyncMode: this.SyncMode,\n            Role: this.Role,\n            Private: this.Private,\n            Persist: this.Persist,\n            Extra: this.Extra,\n            Password: this.Password,\n        }\n    }\n\n    private Cast() {\n        return {\n            \"0\": this.ID,\n            \"1\": this.User,\n            \"2\": this.Invite,\n            \"3\": this.Name,\n            \"4\": this.Head,\n            \"5\": this.Min,\n            \"6\": this.Max,\n            \"7\": this.SyncMode,\n            \"8\": this.Role,\n            \"9\": this.Private,\n            \"10\": this.Persist,\n            \"11\": this.Extra,\n            \"12\": this.Password\n        }\n    }\n\n    ToString(): string {\n        return JSON.stringify(this.Cast())\n    }\n}\n\nexport class StartGame {\n    MemerID: string | undefined\n    Area: Area | undefined\n    Room: any | undefined\n\n    parse(inputS: string) {\n\n        let input = JSON.parse(inputS)\n        let areaT = new Area();\n        areaT.parse(JSON.stringify(input[\"2\"]))\n\n        this.Room = input[\"0\"];\n        this.MemerID = input[\"1\"];\n        this.Area = areaT\n    }\n\n    cast(): object {\n        return {\n            \"0\": this.Room,\n            \"1\": this.MemerID,\n            \"2\": this.Area,\n        }\n    }\n\n    toString(): string {\n        return JSON.stringify(this.cast())\n    }\n}\n\nexport class Area {\n    Endpoint: string = \"\"\n    Protocol: string | undefined\n    Port: number = 0\n    Token: string | undefined\n    PublicKey: string | undefined\n    Hash: string | undefined\n\n    parse(inputS: string) {\n        let input = JSON.parse(inputS)\n        this.Endpoint = input[\"0\"];\n        this.Protocol = input[\"1\"];\n        this.Port = input[\"2\"];\n        this.Token = input[\"3\"];\n        this.PublicKey = input[\"4\"];\n        this.Hash = input[\"5\"];\n    }\n\n    cast(): object {\n        return {\n            \"0\": this.Endpoint,\n            \"1\": this.Protocol,\n            \"2\": this.Port,\n            \"3\": this.Token,\n            \"4\": this.PublicKey,\n            \"5\": this.Hash\n        }\n    }\n\n    toString(): string {\n        return JSON.stringify(this.cast())\n    }\n}","import { Actions, } from '../../../../Utils/Consts';\nimport { GameService } from '../../../index';\nimport { Data, JoinPayload } from './models';\nimport { AuthPayload, BufferToString, Packet } from './models';\nimport WebSocket from 'ws';\nimport { Log } from '../../../../Utils/Logger';\nimport { EventPayload, GProtocolSendType, MessageType } from '../../RealTime/models';\nimport { Room } from '../ُTurnBased/models';\n\nexport class RealTime {\n    constructor(public superThis: GameService) { }\n\n    realtimeToken: bigint = BigInt(0);\n    RoomID: string = \"\";\n    ConnectHash: string = \"\";\n    static Connection: WebSocket | undefined = undefined\n\n    public Initilize(RoomID: string, ConnectHash: string, Endpoint: string, Port: number) {\n        Log(\"[RealTime]\", `[Connecting] [${RoomID}] [ws://${Endpoint}:${Port}]`);\n\n        this.RoomID = RoomID;\n        this.ConnectHash = ConnectHash;\n\n        RealTime.Connection = new WebSocket(`ws://${Endpoint}:${Port}`);\n        RealTime.Connection.binaryType = \"arraybuffer\"\n        RealTime.Connection!.onopen = this.OnConnect\n        RealTime.Connection!.onmessage = this.OnReceive;\n        RealTime.Connection!.onclose = this.onDisconnect;\n        RealTime.Connection!.onerror = function (error) {\n            throw error;\n        };\n    }\n    protected OnConnect = (e: WebSocket.OpenEvent) => {\n        Log(\"[RealTime]\", \"[onConnect]\")\n        // Send Auth pkt\n        let payload = new AuthPayload();\n        payload.RoomID = this.RoomID;\n        payload.Token = this.superThis.Authentication.gameToken;\n        payload.Hash = this.ConnectHash;\n\n        let pkt = new Packet();\n        pkt.Action = Actions.RealTime.ActionAuth;\n        pkt.Payload = payload.ToBuffer()\n        pkt.Send();\n    }\n\n    protected OnReceive = (event: WebSocket.MessageEvent) => {\n        let packet = new Packet()\n        packet.Deserialize(Buffer.from(event.data.toString(), \"base64\"));\n\n        switch (packet.Action) {\n            case Actions.RealTime.ActionAuth:\n                this.realtimeToken = packet.Token!\n                break\n            // case Actions.RealTime.ActionData:\n\n            //     break\n            case Actions.RealTime.ActionPublicMessage:\n                let msg = new Data();\n                msg.Deserialize(packet.Payload!)\n                this.superThis.GSLive.RealTime.NewMessageReceived({\n                    MessageInfo: {\n                        MessageType: MessageType[packet.Action],\n                        SendType: GProtocolSendType[packet.Type],\n                        ClientReceiveTime: packet.ClientSendTime,\n                    },\n                    Message: msg.Export(),\n                })\n                break\n            case Actions.RealTime.ActionPrivateMessage:\n                let msgPrv = new Data();\n                msgPrv.Deserialize(packet.Payload!)\n                this.superThis.GSLive.RealTime.NewMessageReceived({\n                    MessageInfo: {\n                        MessageType: MessageType[packet.Action],\n                        SendType: GProtocolSendType[packet.Type],\n                        ClientReceiveTime: packet.ClientSendTime,\n                    },\n                    Message: msgPrv.Export(),\n                })\n                break\n            case Actions.RealTime.ActionJoin:\n                let payload = new JoinPayload()\n                payload.Parse(JSON.parse(BufferToString(packet.Payload!)))\n                this.superThis.GSLive.RealTime.OnJoinedRoom(payload.Export())\n                break\n            case Actions.RealTime.ActionMembersDetail:\n                let members = JSON.parse(BufferToString(packet.Payload!));\n                this.superThis.GSLive.RealTime.RoomMembersDetailReceived(members)\n                break\n            case Actions.RealTime.ActionLeave:\n                let member = JSON.parse(BufferToString(packet.Payload!));\n                this.superThis.GSLive.RealTime.OnLeaveRoom(member)\n                if (member!.user!.isMe) {\n                    RealTime.Connection?.close()\n                    this.realtimeToken = BigInt(0)\n                    this.ConnectHash = \"\"\n                    this.RoomID = \"\"\n                    RealTime.Connection = undefined;\n                }\n                break\n            // case Actions.RealTime.ActionDestroy:\n\n            //     break\n            // case Actions.RealTime.ActionStatus:\n\n            //     break\n            // case Actions.RealTime.ActionMirror:\n            //     // Do Nothing\n            //     break\n            case Actions.RealTime.ActionEventMessage:\n                let evM = new Data();\n                evM.Deserialize(packet.Payload!)\n\n                let ev = new EventPayload();\n                ev.Deserialize(evM.Payload)\n                this.superThis.GSLive.RealTime.OnPropertyEvent({\n                    By: evM.SenderID,\n                    Name: ev.Name,\n                    Value: BufferToString(ev.Value),\n                    Action: evM.GetExtra().Action,\n                    Type: evM.GetExtra().Type,\n                })\n                break\n            // case Actions.RealTime.ActionGetRoomSnapshot:\n            //     console.log(\"ActionGetRoomSnapshot\", BufferToString(packet.Payload!))\n            //     break\n            // case Actions.RealTime.ActionObserver:\n\n            //     break\n            case Actions.RealTime.ActionRoomInfo:\n                let roomInfoS = JSON.parse(BufferToString(packet.Payload!));\n                let roomInfo = new Room();\n                roomInfo.Parse(roomInfoS);\n                this.superThis.GSLive.RealTime.CurrentRoomInfoReceived(roomInfo.Export())\n                break\n            case Actions.Error:\n                console.error(`[Error] [Msg: ${packet.Payload?.toString()}]`)\n                break\n\n            default:\n                Log(\"[RealTime]\", `[OnReceive]: ${packet.ToString()}`);\n        }\n    }\n    private onDisconnect = (event: WebSocket.CloseEvent) => {\n        if (event.wasClean) {\n            Log(\"[RealTime]\", `[close] Connection closed cleanly, code=${event.code} reason=${event.reason}`);\n        } else {\n            // e.g. server process killed or network down event.code is usually 1006 in this case\n            Log(\"[RealTime]\", '[close] Connection died');\n        }\n        this.realtimeToken = BigInt(0);\n        this.ConnectHash = \"\";\n    }\n}","import { RealTime } from \".\"\nimport { Room } from \"../ُTurnBased/models\"\n\nexport class Packet {\n    private _Action: number | undefined\n    public get Action(): number | undefined {\n        return this._Action\n    }\n    public set Action(value: number | undefined) {\n        if (value! > 255) value = 255\n        this._Action = value\n    }\n    Payload: Uint8Array | undefined\n    private _Token: bigint = BigInt(0)\n    public get Token(): bigint {\n        return this._Token\n    }\n    public set Token(value: bigint) {\n        this._Token = value\n    }\n    // 0 -> unReliable, 1 -> Reliable\n    private _Type: number = 0\n    public get Type(): number {\n        return this._Type\n    }\n    public set Type(value: number) {\n        if (value! > 255) value = 255\n        this._Type = value\n    }\n    ClientSendTime: number | undefined\n\n    Cast() {\n        return {\n            \"1\": this.Action,\n            \"2\": BufferToString(this.Payload!),\n            \"3\": Number(this.Token),\n            \"4\": this.Type,\n            \"5\": this.ClientSendTime\n        }\n    }\n\n    ToString(): string {\n        return JSON.stringify(this.Cast())\n    }\n\n\n    Parse(inputJ: any) {\n        this.Action = inputJ[\"1\"]\n        this.Payload = inputJ[\"2\"]\n        this.Token = inputJ[\"3\"]\n        this.Type = inputJ[\"4\"]\n        this.ClientSendTime = inputJ[\"5\"]\n    }\n\n    Serialize(): Uint8Array {\n        let havePayload: number = 0x0\n        let haveClientSendTime: number = 0x0\n        if (this.Payload)\n            havePayload = 0x1\n        if (this.ClientSendTime)\n            haveClientSendTime = 0x1\n\n        let source = [this.Action!, haveClientSendTime, havePayload];\n        if (havePayload === 0x1) {\n            let t = Buffer.alloc(2);\n            t.writeUInt16LE(this.Payload?.length!)\n            source = [...source, ...t.valueOf()]\n        }\n        source.push(this.Type)\n\n        let t = Buffer.alloc(8);\n        t.writeBigUInt64LE(this.Token)\n        source = [...source, ...t.valueOf()]\n\n        if (havePayload === 0x1)\n            source = [...source, ...this.Payload!]\n        if (haveClientSendTime === 0x1) {\n            let t = Buffer.alloc(8);\n            t.writeBigInt64LE(BigInt(this.ClientSendTime!))\n            source = [...source, ...t.valueOf()]\n        }\n        return new Uint8Array(source)\n    }\n\n    Deserialize(input: Uint8Array) {\n        let buff = Buffer.from(input);\n        let offset = 0;\n\n        let haveClientSendTime = 0x0;\n        let havePayload = 0x0;\n\n        let payloadLen = 0x0;\n        this.Action = buff.readUInt8(offset++)\n\n        haveClientSendTime = buff.readUInt8(offset++)\n\n        havePayload = buff.readUInt8(offset++)\n\n        if (havePayload > 0) {\n            payloadLen = buff.readUInt16LE(offset)\n            offset += 2\n        }\n\n        this.Type = buff.readUInt8(offset++)\n\n        this.Token = buff.readBigUInt64LE(offset)\n        offset += 8\n\n        if (havePayload > 0) {\n            this.Payload = buff.slice(offset, offset + payloadLen)\n            offset += payloadLen\n        }\n\n        if (haveClientSendTime > 0) {\n            this.ClientSendTime = Number(buff.readBigInt64LE(offset))\n        }\n    }\n\n    Send = () => {\n        let serilized = this.Serialize()\n        if (RealTime.Connection!.readyState)\n            RealTime.Connection!.send(serilized, { binary: true, compress: false });\n    }\n}\n\nexport class Data {\n    private _SenderID: string | undefined\n    public get SenderID(): string | undefined {\n        return this._SenderID\n    }\n    public set SenderID(value: string | undefined) {\n        this._SenderID = value\n    }\n    private _ReceiverID: string | undefined\n    public get ReceiverID(): string | undefined {\n        return this._ReceiverID\n    }\n    public set ReceiverID(value: string | undefined) {\n        this._ReceiverID = value\n    }\n    private _Payload: Uint8Array | undefined\n    public get Payload(): Uint8Array | undefined {\n        return this._Payload\n    }\n    public set Payload(value: Uint8Array | undefined) {\n        this._Payload = value\n    }\n    private _Extra: Uint8Array = new Uint8Array()\n    public GetExtra(): any {\n        let b = Buffer.from(this._Extra);\n        return {\n            Type: b.readUInt8(),\n            Action: b.readUInt8(1)\n        }\n    }\n    public SetExtra(type: Types, action: Operations) {\n        this._Extra = new Uint8Array([type, action]);\n    }\n\n\n    Cast() {\n        return {\n            \"1\": this.SenderID,\n            \"2\": this.ReceiverID,\n            \"3\": BufferToString(this.Payload!),\n            \"4\": this._Extra!,\n        }\n    }\n\n    Parse(inputJ: any) {\n        this.SenderID = inputJ[\"1\"];\n        this.ReceiverID = inputJ[\"2\"];\n        this.Payload = inputJ[\"3\"];\n        this._Extra = inputJ[\"4\"]\n    }\n\n    Export() {\n        return {\n            SenderID: this.SenderID,\n            ReceiverID: this.ReceiverID,\n            Payload: BufferToString(this.Payload!),\n            Extra: this.GetExtra(),\n        }\n    }\n\n    Serialize(): Uint8Array {\n        let haveSenderID = 0x0;\n        let haveRecieverID = 0x0;\n        let havePayload = 0x0;\n        let haveExtra = 0x0;\n\n        if (this.SenderID) {\n            haveSenderID = 0x1;\n        }\n\n        if (this.ReceiverID) {\n            haveRecieverID = 0x1;\n        }\n\n        if (this.Payload!.length > 0) {\n            havePayload = 0x1;\n        }\n\n        if (this._Extra) {\n            haveExtra = 0x1;\n        }\n\n        let source = [haveSenderID, haveRecieverID, havePayload, haveExtra];\n\n        let ReceiverIDBuff = StringToBuffer(this.ReceiverID!)\n        let SenderIDBuff = StringToBuffer(this.SenderID!)\n\n        if (haveSenderID > 0) {\n            source.push(SenderIDBuff.length);\n        }\n\n        if (haveRecieverID > 0) {\n            source.push(ReceiverIDBuff.length);\n        }\n\n        if (havePayload > 0) {\n            let t = Buffer.alloc(2);\n            t.writeUInt16LE(this.Payload?.length!)\n            source = [...source, ...t.valueOf()];\n        }\n\n        if (haveExtra > 0) {\n            let t = Buffer.alloc(2);\n            t.writeUInt16LE(this._Extra?.length!)\n            source = [...source, ...t.valueOf()];\n        }\n\n        if (haveSenderID > 0) {\n            source = [...source, ...SenderIDBuff];\n        }\n\n        if (haveRecieverID > 0) {\n            source = [...source, ...ReceiverIDBuff];\n        }\n\n        if (havePayload > 0) {\n            source = [...source, ...this.Payload!];\n        }\n\n        if (haveExtra > 0) {\n            source = [...source, ...this._Extra!];\n        }\n        return new Uint8Array(source)\n    }\n\n    Deserialize(input: Uint8Array) {\n        let buff = Buffer.from(input);\n\n        let offset = 0;\n\n        let senderLen = 0;\n        let receiverLen = 0;\n        let payloadLen = 0;\n        let extraLen = 0;\n\n\n        let haveSender = buff.readUInt8(offset++);\n        let haveReceiver = buff.readUInt8(offset++);\n        let havePayload = buff.readUInt8(offset++);\n        let haveExtra = buff.readUInt8(offset++);\n\n        if (haveSender > 0) {\n            senderLen = buff.readUInt8(offset++);\n        }\n\n        if (haveReceiver > 0) {\n            receiverLen = buff.readUInt8(offset++);\n        }\n\n        if (havePayload > 0) {\n            payloadLen = buff.readUInt16LE(offset)\n            offset += 2\n        }\n\n        if (haveExtra > 0) {\n            extraLen = buff.readUInt16LE(offset)\n            offset += 2\n        }\n        if (haveSender > 0) {\n            this.SenderID = BufferToString(buff.slice(offset, offset + senderLen))\n            offset += senderLen\n        }\n\n        if (haveReceiver > 0) {\n            this.ReceiverID = BufferToString(buff.slice(offset, offset + receiverLen))\n            offset += receiverLen\n        }\n\n        if (havePayload > 0) {\n            this.Payload = buff.slice(offset, offset + payloadLen);\n            offset += payloadLen\n        }\n\n        if (haveExtra > 0) {\n            this._Extra = buff.slice(offset, offset + extraLen);\n            offset += extraLen\n        }\n    }\n}\n\nexport enum Types {\n    Object = 0x1,\n    Function = 0x2,\n    Property = 0x3\n}\n\nexport enum Operations {\n    SetMemberProperty = 0x2,\n    DelMemberProperty = 0x3,\n    SetRoomProperty = 0x0,\n    DelRoomProperty = 0x1,\n\n    BufferedFunction = 0x2,\n\n    InstanceObject = 0x0,\n    DestroyObject = 0x1\n}\n\nexport function StringToBuffer(str: string): Uint8Array {\n    let string = unescape(encodeURIComponent(str)),\n        charList = string.split(''),\n        uintArray = [];\n    for (var i = 0; i < charList.length; i++) {\n        uintArray.push(charList[i].charCodeAt(0));\n    }\n    return new Uint8Array(uintArray);\n}\n\nexport function BufferToString(buff: Uint8Array): string {\n    var encodedString = String.fromCharCode.apply(null, [].slice.call(buff)),\n        decodedString = decodeURIComponent(escape(encodedString));\n    return decodedString;\n}\n\nexport class AuthPayload {\n    RoomID: string | undefined\n    Token: string | undefined\n    Hash: string | undefined\n\n    Cast() {\n        return {\n            \"1\": this.RoomID,\n            \"2\": this.Token,\n            \"3\": this.Hash\n        }\n    }\n\n    Parse(inputJ: any) {\n        this.RoomID = inputJ[\"1\"]\n        this.Token = inputJ[\"2\"]\n        this.Hash = inputJ[\"3\"]\n    }\n\n    ToString(): string {\n        return JSON.stringify(this.Cast())\n    }\n\n    ToBuffer(): Uint8Array {\n        return StringToBuffer(this.ToString())\n    }\n}\n\nexport class JoinPayload {\n    JoinType: number | undefined\n    Room: object | undefined\n    UserJoined: object | undefined\n    JoinMemberOrder: number | undefined\n\n    Cast() {\n        return {\n            \"1\": this.JoinType,\n            \"2\": this.Room,\n            \"3\": this.UserJoined,\n            \"4\": this.JoinMemberOrder\n        }\n    }\n\n    Parse(inputJ: any) {\n        this.JoinType = inputJ[\"1\"]\n        let room = new Room();\n        room.Parse(inputJ[\"2\"])\n        this.Room = room.Export()\n        this.UserJoined = inputJ[\"3\"]\n        this.JoinMemberOrder = inputJ[\"4\"]\n    }\n\n    ToString(): string {\n        return JSON.stringify(this.Cast())\n    }\n\n    ToBuffer(): Uint8Array {\n        return StringToBuffer(this.ToString())\n    }\n\n    Export() {\n        return {\n            JoinType: this.JoinType,\n            Room: this.Room,\n            UserJoined: this.UserJoined,\n            JoinMemberOrder: this.JoinMemberOrder,\n        }\n    }\n}","import { Actions } from '../../../../Utils/Consts';\nimport { GameService } from '../../../index';\nimport { Payload } from '../Command/models';\nimport { JoinDetail, Packet, PropertyChange, Room, VoteDetail } from './models';\nimport nWebSocket from 'ws';\nimport { Log } from '../../../../Utils/Logger';\n\nexport class TurnBased {\n    constructor(public superThis: GameService) { }\n\n    turnbasedToken: string = \"\";\n    RoomID: string = \"\";\n    static Connection: nWebSocket | WebSocket | undefined = undefined\n\n    public Initilize(RoomID: string, Endpoint: string, Port: number) {\n        Log(\"[TurnBased]\", `[Connecting] [${RoomID}] [ws://${Endpoint}:${Port}]`);\n\n        this.RoomID = RoomID;\n        if (typeof window === 'undefined') {\n            Log(\"[TurnBased]\", `[Node] [Connecting] [ws://${Endpoint}:${Port}]`);\n            TurnBased.Connection = new nWebSocket(`ws://${Endpoint}:${Port}`);\n        } else {\n            Log(\"[TurnBased]\", `[Browser] [Connecting] [ws://${Endpoint}:${Port}]`);\n            TurnBased.Connection = new WebSocket(`ws://${Endpoint}:${Port}`);\n        }\n        TurnBased.Connection!.onopen = this.OnConnect\n        TurnBased.Connection!.onmessage = this.OnReceive;\n        TurnBased.Connection!.onclose = this.onDisconnect;\n        TurnBased.Connection!.onerror = (err: nWebSocket.ErrorEvent) => {\n            throw err;\n        };\n\n    }\n    protected OnConnect = (e: nWebSocket.OpenEvent) => {\n        // Send Auth pkt\n        let payload = new Payload(this.superThis);\n        payload.SetGameID(this.RoomID);\n        payload.SetToken(this.superThis.Authentication.gameToken);\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.TurnBased.ActionAuth);\n        pkt.SetData(payload.ToString())\n        pkt.Send();\n    }\n\n    protected OnReceive = (event: nWebSocket.MessageEvent) => {\n        // Log(\"[TurnBased]\", `[OnReceive]: ${event.data}`);\n\n        let packet = new Packet(this.superThis)\n        packet.Parse(event.data);\n\n        switch (packet.GetHead()) {\n            case Actions.TurnBased.ActionAuth:\n                this.turnbasedToken = packet.GetToken()!;\n                break\n            case Actions.TurnBased.ActionJoin:\n                let joinData = JSON.parse(packet.GetData()!);\n                let joinDetail = new JoinDetail();\n                joinDetail.Parse(joinData)\n                this.superThis.GSLive.TurnBased.OnJoinedRoom(joinDetail.Export())\n                break\n            case Actions.TurnBased.ActionTakeTurn:\n                let turnData = JSON.parse(packet.GetData()!);\n                this.superThis.GSLive.TurnBased.OnTakeTurn(turnData[\"1\"], turnData[0])\n                break\n            case Actions.TurnBased.ActionChooseNext:\n                let nextData = JSON.parse(packet.GetData()!);\n                this.superThis.GSLive.TurnBased.OnChoosedNext(nextData)\n                break\n            case Actions.TurnBased.ActionLeave:\n                let member = JSON.parse(packet.GetData()!);\n                this.superThis.GSLive.TurnBased.OnLeaveRoom(member)\n                if (member!.user!.isMe) {\n                    TurnBased.Connection?.close()\n                    this.turnbasedToken = \"\"\n                    this.RoomID = \"\"\n                    TurnBased.Connection = undefined;\n                }\n                break\n            case Actions.TurnBased.ActionVote:\n                let voteDetail = JSON.parse(packet.GetData()!);\n                let vote = new VoteDetail();\n                vote.Parse(voteDetail);\n                this.superThis.GSLive.TurnBased.OnVoteReceived(vote.Member!, vote.Outcomes!)\n                break\n            case Actions.TurnBased.ActionAcceptVote:\n                let result = JSON.parse(packet.GetData()!);\n                this.superThis.GSLive.TurnBased.OnComplete(result)\n                break\n            case Actions.TurnBased.ActionGetUsers:\n                let members = JSON.parse(packet.GetData()!);\n                this.superThis.GSLive.TurnBased.OnRoomMembersDetailReceived(members)\n                break\n            case Actions.TurnBased.ActionCurrentTurnDetail:\n                let currentTurn = JSON.parse(packet.GetData()!);\n                this.superThis.GSLive.TurnBased.OnCurrentTurnMember(currentTurn)\n                break\n            case Actions.TurnBased.ModifyValue:\n                let value = JSON.parse(packet.GetData()!);\n                let propertyChange = new PropertyChange();\n                propertyChange.Parse(value)\n                this.superThis.GSLive.TurnBased.OnPropertyUpdated(propertyChange)\n                break\n            case Actions.TurnBased.GetRoomInfo:\n                let roomInfoS = JSON.parse(packet.GetData()!);\n                let roomInfo = new Room();\n                roomInfo.Parse(roomInfoS);\n                this.superThis.GSLive.TurnBased.OnCurrentRoomInfoReceived(roomInfo.Export())\n                break\n            case Actions.Error:\n                console.error(`[Error] [Msg: ${packet.GetMsg()}]`)\n                break\n        }\n    }\n\n    private onDisconnect = (event: nWebSocket.CloseEvent) => {\n        if (event.wasClean) {\n            Log(\"[TurnBased]\", `[close] Connection closed cleanly, code=${event.code} reason=${event.reason}`);\n        } else {\n            // e.g. server process killed or network down event.code is usually 1006 in this case\n            Log(\"[TurnBased]\", '[close] Connection died');\n        }\n        this.turnbasedToken = \"\";\n    }\n}","import { TurnBased } from \".\";\nimport { GameService } from '../../../index';\nimport { Member } from \"../../../Player/models\";\nimport { PropertyType } from \"../../TurnBased/models\";\n\nexport class Packet {\n    constructor(public superThis: GameService) { }\n\n    public Parse(input: any) {\n        let inputJ = JSON.parse(input)\n        this.SetToken(inputJ[\"0\"]);\n        this.SetHead(inputJ[\"1\"]);\n        this.SetData(inputJ[\"2\"]);\n        this.SetMsg(inputJ[\"3\"]);\n    }\n\n    private Token: string | undefined\n    public GetToken(): string | undefined {\n        return this.Token;\n    }\n    public SetToken(Token: string) {\n        this.Token = Token;\n    }\n\n    private Head: number | undefined\n    public GetHead(): number | undefined {\n        return this.Head;\n    }\n    public SetHead(Head: number) {\n        this.Head = Head;\n    }\n\n    private Data: string | undefined\n    public GetData(): string | undefined {\n        return this.Data;\n    }\n    public SetData(Data: string) {\n        this.Data = Data;\n    }\n\n    private Msg: string | undefined\n    public GetMsg(): string | undefined {\n        return this.Msg;\n    }\n    public SetMsg(Msg: string) {\n        this.Msg = Msg;\n    }\n\n    private Cast() {\n        return {\n            \"0\": this.Token,\n            \"1\": this.Head,\n            \"2\": this.Data,\n            \"3\": this.Msg\n        }\n    }\n    ToString(): string {\n        return JSON.stringify(this.Cast())\n    }\n    Send = () => {\n        let serilized = this.ToString()\n        TurnBased.Connection!.send(serilized);\n    }\n}\n\nexport class Room {\n    public Parse(inputJ: any) {\n        this.ID = inputJ[\"1\"];\n        this.Name = inputJ[\"2\"];\n        this.Logo = inputJ[\"3\"];\n        this.Creator = inputJ[\"4\"];\n        this.Min = inputJ[\"5\"];\n        this.Max = inputJ[\"6\"];\n        this.Role = inputJ[\"7\"];\n        this.Private = inputJ[\"8\"];\n        this.Status = inputJ[\"9\"];\n        this.NumOfMembers = inputJ[\"10\"];\n        this.Variables = inputJ[\"11\"];\n        this.Persist = inputJ[\"12\"];\n        this.CreatedAt = inputJ[\"13\"];\n    }\n\n    private _ID: string | undefined;\n    public get ID(): string {\n        return this._ID!;\n    }\n    public set ID(value: string) {\n        this._ID = value;\n    }\n    private _Name: string | undefined = \"\";\n    public get Name(): string {\n        return this._Name!;\n    }\n    public set Name(value: string) {\n        this._Name = value;\n    }\n    private _Logo: string | undefined;\n    public get Logo(): string {\n        return this._Logo!;\n    }\n    public set Logo(value: string) {\n        this._Logo = value;\n    }\n    private _Creator: string | undefined;\n    public get Creator(): string {\n        return this._Creator!;\n    }\n    public set Creator(value: string) {\n        this._Creator = value;\n    }\n    private _Min: number | undefined;\n    public get Min(): number {\n        return this._Min!;\n    }\n    public set Min(value: number) {\n        this._Min = value;\n    }\n    private _Max: number | undefined;\n    public get Max(): number {\n        return this._Max!;\n    }\n    public set Max(value: number) {\n        this._Max = value;\n    }\n    private _Role: string | undefined;\n    public get Role(): string {\n        return this._Role!;\n    }\n    public set Role(value: string) {\n        this._Role = value;\n    }\n    private _Private: boolean | undefined = false;\n    public get Private(): boolean {\n        return this._Private!;\n    }\n    public set Private(value: boolean) {\n        this._Private = value;\n    }\n    private _Status: number | undefined;\n    public get Status(): number {\n        return this._Status!;\n    }\n    public set Status(value: number) {\n        this._Status = value;\n    }\n    private _NumOfMembers: number | undefined;\n    public get NumOfMembers(): number {\n        return this._NumOfMembers!;\n    }\n    public set NumOfMembers(value: number) {\n        this._NumOfMembers = value;\n    }\n    private _Variables: object | undefined;\n    public get Variables(): object {\n        return this._Variables!;\n    }\n    public set Variables(value: object) {\n        this._Variables = value;\n    }\n    private _Persist: boolean | undefined = false;\n    public get Persist(): boolean {\n        return this._Persist!;\n    }\n    public set Persist(value: boolean) {\n        this._Persist = value;\n    }\n    private _CreatedAt: string | undefined;\n    public get CreatedAt(): string {\n        return this._CreatedAt!;\n    }\n    public set CreatedAt(value: string) {\n        this._CreatedAt = value;\n    }\n\n    Export() {\n        return {\n            \"ID\": this.ID,\n            \"Name\": this.Name,\n            \"Logo\": this.Logo,\n            \"Creator\": this.Creator,\n            \"Min\": this.Min,\n            \"Max\": this.Max,\n            \"Role\": this.Role,\n            \"Private\": this.Private,\n            \"Status\": this.Status,\n            \"NumOfMembers\": this.NumOfMembers,\n            \"Variables\": this.Variables,\n            \"Persist\": this.Persist,\n            \"CreatedAt\": this.CreatedAt,\n        }\n    }\n\n    Cast() {\n        return {\n            \"1\": this.ID,\n            \"2\": this.Name,\n            \"3\": this.Logo,\n            \"4\": this.Creator,\n            \"5\": this.Min,\n            \"6\": this.Max,\n            \"7\": this.Role,\n            \"8\": this.Private,\n            \"9\": this.Status,\n            \"10\": this.NumOfMembers,\n            \"11\": this.Variables,\n            \"12\": this.Persist,\n            \"13\": this.CreatedAt,\n        }\n    }\n    ToString(): string {\n        return JSON.stringify(this.Cast())\n    }\n}\n\nexport class PropertyChange {\n    public Parse(inputJ: any) {\n        if (inputJ[\"1\"] == 1)\n            this.Type = PropertyType.Room;\n        else\n            this.Type = PropertyType.Member;\n\n        if (inputJ[\"2\"] == 3 || inputJ[\"2\"] == 1)\n            this.Action = \"SetOtUpdate\";\n        else\n            this.Action = \"Delete\";\n        this.Sender = inputJ[\"3\"];\n        this.Name = inputJ[\"4\"];\n        this.Value = inputJ[\"5\"];\n    }\n\n    Type: string | undefined\n    Action: string | undefined\n    Sender: object | undefined\n    Name: string | undefined\n    Value: string | undefined\n\n    Export() {\n        return {\n            \"Type\": this.Type,\n            \"Action\": this.Action,\n            \"Sender\": this.Sender,\n            \"Name\": this.Name,\n            \"Value\": this.Value,\n        }\n    }\n}\n\nexport class JoinDetail {\n    JoinType: number | undefined\n    Member: Member | undefined\n    Room: Room | undefined\n    JoinOrder: number | undefined\n\n    Parse(inputJ: any) {\n        let room = new Room();\n        room.Parse(inputJ[\"2\"])\n\n        this.JoinType = inputJ[\"1\"]\n        this.Member = inputJ[\"3\"]\n        this.Room = room\n        this.JoinOrder = inputJ[\"4\"]\n    }\n\n    Export() {\n        return {\n            JoinType: this.JoinType,\n            Member: this.Member,\n            Room: this.Room?.Export(),\n            JoinOrder: this.JoinOrder\n        }\n    }\n}\n\nexport class VoteDetail {\n    Member: object | undefined\n    Outcomes: object | undefined\n\n    Parse(inputJ: any) {\n        this.Member = inputJ[\"0\"]\n        this.Outcomes = inputJ[\"1\"]\n    }\n}\n\nexport class GameResult {\n    AcceptCount: number | undefined\n    Outcome: object | undefined\n\n    Parse(inputJ: any) {\n        this.AcceptCount = inputJ[\"0\"]\n        this.Outcome = inputJ[\"1\"]\n    }\n}","import { GameService } from '../..';\nimport { Log } from '../../../Utils/Logger';\nimport { Actions } from '../../../Utils/Consts';\nimport { CreateRoomOptions, AutoMatchOptions, GProtocolSendType, EventPayload } from './models';\nimport { Data, Packet, Payload } from '../Controllers/Command/models';\nimport { Packet as RtPacket, Data as RtData, StringToBuffer, Types, Operations } from '../Controllers/RealTime/models';\nexport class RealTime {\n    constructor(public superThis: GameService) { }\n\n    // Functions\n    public async CreateRoom(options: CreateRoomOptions) {\n        if (this.superThis.GSLive.Command.commandToken == \"\")\n            throw \"User not connected to Command Server\";\n        if (this.superThis.GSLive.RealTimeController.RoomID)\n            throw \"User is already in game room, please left from it first.\";\n\n        let data = new Data(this.superThis);\n        data.SetMax(options.maxPlayer);\n        data.SetMin(options.minPlayer);\n        data.SetName(options.roomName);\n        data.SetPassword(options.roomPassword!);\n        data.SetRole(options.role);\n        data.SetPersist(options.isPersist);\n        data.SetPrivate(options.isPrivate);\n        data.SetExtra(options.extra!);\n        data.SetSyncMode(2);\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionCreateRoom);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetData(data.ToString())\n        pkt.Send()\n    }\n\n    public async AutoMatch(options: AutoMatchOptions) {\n        if (this.superThis.GSLive.Command.commandToken == \"\")\n            throw \"User not connected to Command Server\";\n        if (this.superThis.GSLive.Command.isInAutoMatchQueue)\n            throw \"User is in automatch queue already\";\n        if (this.superThis.GSLive.RealTimeController.RoomID)\n            throw \"User is already in game room, please left from it first.\";\n\n        let data = new Data(this.superThis);\n        data.SetMax(options.maxPlayer);\n        data.SetMin(options.minPlayer);\n        data.SetRole(options.role);\n        data.SetPersist(options.isPersist);\n        data.SetExtra(options.extra!);\n        data.SetSyncMode(2);\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionAutoMatch);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetData(data.ToString())\n        pkt.Send()\n    }\n\n    public async CancelAutoMatch() {\n        if (this.superThis.GSLive.Command.commandToken == \"\")\n            throw \"User not connected to Command Server\";\n        if (!this.superThis.GSLive.Command.isInAutoMatchQueue)\n            throw \"User is not in automatch queue\";\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.LeftWaitingQ);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.Send()\n    }\n\n    public async GetAvailableRooms(role: string, limit: number) {\n        if (this.superThis.GSLive.Command.commandToken == \"\")\n            throw \"User not connected to Command Server\";\n        let data = new Data(this.superThis);\n        data.SetMax(limit);\n        data.SetRole(role);\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionGetRooms);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetData(data.ToString());\n        pkt.Send()\n    }\n\n    public async JoinRoom(roomID: string, extra: string | undefined = undefined, password: string | undefined = undefined) {\n        if (this.superThis.GSLive.Command.commandToken == \"\")\n            throw \"User not connected to Command Server\";\n        if (this.superThis.GSLive.RealTimeController.RoomID)\n            throw \"User is already in game room, please left from it first.\";\n\n        let data = new Data(this.superThis);\n        data.SetID(roomID);\n        data.SetExtra(extra!);\n        data.SetPassword(password!);\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionJoinRoom);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetData(data.ToString());\n        pkt.Send()\n    }\n\n    public async FindMember(query: string, limit: number) {\n        if (this.superThis.GSLive.Command.commandToken == \"\")\n            throw \"User not connected to Command Server\";\n        let data = new Data(this.superThis);\n        data.SetUser(query);\n        data.SetMax(limit);\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionFindUser);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetData(data.ToString());\n        pkt.Send()\n    }\n\n    public async InviteUser(roomID: string, userID: string) {\n        if (this.superThis.GSLive.Command.commandToken == \"\")\n            throw \"User not connected to Command Server\";\n        let data = new Data(this.superThis);\n        data.SetID(roomID);\n        data.SetUser(userID);\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionInviteUser);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetData(data.ToString());\n        pkt.Send()\n    }\n\n    public async GetInviteInbox() {\n        if (this.superThis.GSLive.Command.commandToken == \"\")\n            throw \"User not connected to Command Server\";\n        let data = new Data(this.superThis);\n        data.SetSyncMode(2);\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionGetInviteList);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetData(data.ToString());\n        pkt.Send()\n    }\n\n    public async AcceptInvite(inviteID: string, extra: string) {\n        if (this.superThis.GSLive.Command.commandToken == \"\")\n            throw \"User not connected to Command Server\";\n        if (this.superThis.GSLive.RealTimeController.RoomID)\n            throw \"User is already in game room, please left from it first.\";\n\n        let data = new Data(this.superThis);\n        data.SetInvite(inviteID);\n        data.SetExtra(extra)\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionAcceptInvite);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetData(data.ToString());\n        pkt.Send();\n    }\n\n    public async GetCurrentRoomInfo() {\n        if (this.superThis.GSLive.RealTimeController.RoomID.length < 1)\n            throw \"User is not in any game room\";\n\n        let packet = new RtPacket();\n        packet.Action = Actions.RealTime.ActionRoomInfo\n        packet.Token = this.superThis.GSLive.RealTimeController.realtimeToken;\n        packet.Send()\n    }\n\n    public async GetRoomMembersDetail() {\n        if (this.superThis.GSLive.RealTimeController.RoomID.length < 1)\n            throw \"User is not in any game room\";\n\n        let packet = new RtPacket();\n        packet.Action = Actions.RealTime.ActionMembersDetail\n        packet.Token = this.superThis.GSLive.RealTimeController.realtimeToken;\n        packet.Send()\n    }\n\n    public async SendPublicMessage(data: string, sendType: GProtocolSendType) {\n        if (this.superThis.GSLive.RealTimeController.RoomID.length < 1)\n            throw \"User is not in any game room\";\n\n        let packet = new RtPacket();\n        packet.Action = Actions.RealTime.ActionPublicMessage\n        packet.Token = this.superThis.GSLive.RealTimeController.realtimeToken;\n        packet.Type = sendType\n        packet.Payload = StringToBuffer(data);\n        packet.Send()\n    }\n\n    public async SendPrivateMessage(recieverID: string, data: string) {\n        if (this.superThis.GSLive.RealTimeController.RoomID.length < 1)\n            throw \"User is not in any game room\";\n\n        let payload = new RtData();\n        payload.ReceiverID = recieverID;\n        payload.Payload = StringToBuffer(data);\n\n        let packet = new RtPacket();\n        packet.Action = Actions.RealTime.ActionPrivateMessage\n        packet.Token = this.superThis.GSLive.RealTimeController.realtimeToken;\n        packet.Payload = payload.Serialize()\n        packet.Send()\n    }\n\n    public async SetOrUpdateMemberProperty(name: string, value: string) {\n        if (this.superThis.GSLive.RealTimeController.RoomID.length < 1)\n            throw \"User is not in any game room\";\n\n        let ev = new EventPayload();\n        ev.Name = name;\n        ev.Value = StringToBuffer(value);\n\n        let payload = new RtData();\n        payload.Payload = ev.Serialize();\n\n        let data = new RtData();\n        data.SetExtra(Types.Property, Operations.SetMemberProperty);\n        data.Payload = ev.Serialize();\n\n        let packet = new RtPacket();\n        packet.Action = Actions.RealTime.ActionEventMessage\n        packet.Token = this.superThis.GSLive.RealTimeController.realtimeToken;\n        packet.Payload = data.Serialize()\n        packet.Send()\n    }\n\n    public async RemoveMemberProperty(propertyName: string) {\n        if (this.superThis.GSLive.RealTimeController.RoomID.length < 1)\n            throw \"User is not in any game room\";\n\n        let ev = new EventPayload();\n        ev.Name = propertyName;\n\n        let payload = new RtData();\n        payload.Payload = ev.Serialize();\n\n        let data = new RtData();\n        data.SetExtra(Types.Property, Operations.DelMemberProperty);\n        data.Payload = ev.Serialize();\n\n        let packet = new RtPacket();\n        packet.Action = Actions.RealTime.ActionEventMessage\n        packet.Token = this.superThis.GSLive.RealTimeController.realtimeToken;\n        packet.Payload = data.Serialize()\n        packet.Send()\n    }\n\n    public async SetOrUpdateRoomProperty(name: string, value: string) {\n        if (this.superThis.GSLive.RealTimeController.RoomID.length < 1)\n            throw \"User is not in any game room\";\n\n        let ev = new EventPayload();\n        ev.Name = name;\n        ev.Value = StringToBuffer(value);\n\n        let payload = new RtData();\n        payload.Payload = ev.Serialize();\n\n        let data = new RtData();\n        data.SetExtra(Types.Property, Operations.SetRoomProperty);\n        data.Payload = ev.Serialize();\n\n        let packet = new RtPacket();\n        packet.Action = Actions.RealTime.ActionEventMessage\n        packet.Token = this.superThis.GSLive.RealTimeController.realtimeToken;\n        packet.Payload = data.Serialize()\n        packet.Send()\n    }\n\n    public async RemoveRoomProperty(propertyName: string) {\n        if (this.superThis.GSLive.RealTimeController.RoomID.length < 1)\n            throw \"User is not in any game room\";\n\n        let ev = new EventPayload();\n        ev.Name = propertyName;\n\n        let payload = new RtData();\n        payload.Payload = ev.Serialize();\n\n        let data = new RtData();\n        data.SetExtra(Types.Property, Operations.DelRoomProperty);\n        data.Payload = ev.Serialize();\n\n        let packet = new RtPacket();\n        packet.Action = Actions.RealTime.ActionEventMessage\n        packet.Token = this.superThis.GSLive.RealTimeController.realtimeToken;\n        packet.Payload = data.Serialize()\n        packet.Send()\n    }\n\n    public async GetRoomProperties() {\n        if (this.superThis.GSLive.RealTimeController.RoomID.length < 1)\n            throw \"User is not in any game room\";\n\n        let packet = new RtPacket();\n        packet.Action = Actions.RealTime.ActionGetRoomSnapshot\n        packet.Token = this.superThis.GSLive.RealTimeController.realtimeToken;\n        packet.Send()\n    }\n\n    // public async GetRoomProperty(propertyName: string) {\n\n    // }\n\n    // public async GetMemberProperties(memberID: string) {\n\n    // }\n\n    // public async GetPropertyValues(propertyName: string) {\n\n    // }\n\n    // public async GetPropertyAndValueMembers(name: string, value: string) {\n\n    // }\n\n    // public async GetPropertyMembers(propertyName: string) {\n\n    // }\n\n    // public async GetRoomMembers() {\n\n    // }\n\n    public async LeaveRoom() {\n        if (this.superThis.GSLive.RealTimeController.RoomID.length < 1)\n            throw \"User is not in any game room\";\n\n        let packet = new RtPacket();\n        packet.Action = Actions.RealTime.ActionLeave\n        packet.Token = this.superThis.GSLive.RealTimeController.realtimeToken;\n        packet.Send()\n    }\n\n    // Event handlers\n    public OnReconnected: (sender: object, reconnectStatus: boolean) => void = () => { };\n    public OnJoinedRoom: (joinData: any) => void = () => { };\n    public OnAutoMatchUpdated: (e: any) => void = () => { };\n    public OnAutoMatchCanceled: (e: string) => void = () => { };\n    public OnAvailableRoomsReceived: (sender: object, e: object[]) => void = () => { };\n    public OnFindMemberReceived: (sender: object, e: object[]) => void = () => { };\n    public OnInvitationSent: (sender: object, e: object) => void = () => { };\n\n    public CurrentRoomInfoReceived: (roomData: any) => void = () => { }\n    public RoomMembersDetailReceived: (members: any[]) => void = () => { }\n    public NewMessageReceived: (event: any) => void = () => { }\n    public OnLeaveRoom: (member: any) => void = () => { }\n    public OnPropertyEvent: (PropertyUpdate: any) => void = () => { }\n}","import { BufferToString, StringToBuffer } from \"../Controllers/RealTime/models\"\n\nexport enum PropertyType {\n    Room = \"room\",\n    Member = \"member\"\n}\n\nexport class CreateRoomOptions {\n    constructor() {\n        this.role = \"default\"\n        this.minPlayer = 2\n        this.maxPlayer = 2\n        this.isPersist = false\n        this.extra = undefined\n        this.isPrivate = false\n        this.roomPassword = undefined\n        this.roomName = \"default\"\n    }\n    roomName: string = \"default\"\n    role: string = \"default\"\n    minPlayer: number = 2\n    maxPlayer: number = 2\n    isPrivate: boolean = false\n    isPersist: boolean = false\n    extra: string | undefined\n    roomPassword: string | undefined\n}\n\n\nexport class AutoMatchOptions {\n    constructor() {\n        this.role = \"default\"\n        this.minPlayer = 2\n        this.maxPlayer = 2\n        this.isPersist = false\n        this.extra = null\n    }\n    role: string = \"default\"\n    minPlayer: number = 2\n    maxPlayer: number = 2\n    isPersist: boolean = false\n    extra: string | null\n}\n\nexport enum GProtocolSendType {\n    UnReliable = 0,\n    Reliable = 1,\n}\n\nexport enum MessageType {\n    Private = 4,\n    Public = 3\n}\n\nexport class EventPayload {\n    Name: string = \"\";\n    Value: Uint8Array = new Uint8Array();\n\n    Serialize(): Uint8Array {\n        let b = Buffer.alloc(2);\n        b.writeUInt16LE(StringToBuffer(this.Name).length);\n        let a = Buffer.alloc(2);\n        a.writeUInt16LE(this.Value?.length);\n\n        let source = [\n            2,\n            12,\n            ...b.valueOf(),\n            ...StringToBuffer(this.Name),\n            13,\n            ...a.valueOf(),\n            ...this.Value\n        ]\n\n        return new Uint8Array(source);\n    }\n\n    Deserialize(input: any) {\n        let buff = Buffer.from(input);\n        let offset = 1\n\n        offset++\n        let NameLength = buff.readUInt16LE(offset)\n        offset += 2\n        let name = buff.slice(offset, offset + NameLength);\n        offset += NameLength;\n        this.Name = BufferToString(name);\n\n        offset++\n        let ValueLength = buff.readUInt16LE(offset)\n        offset += 2\n        let value = buff.slice(offset, offset + ValueLength);\n        offset += ValueLength;\n        this.Value = value;\n    }\n\n    Export() {\n        return {\n            Name: this.Name,\n            Value: BufferToString(this.Value)\n        }\n    }\n}","import { GameService } from '../..';\nimport { Actions } from '../../../Utils/Consts';\nimport { PropertyType, CreateRoomOptions, AutoMatchOptions, Data as TurnData, Outcome } from './models';\nimport { JoinDetail, Packet as TurnPacket, PropertyChange } from '../Controllers/ُTurnBased/models';\nimport { Data, Packet } from '../Controllers/Command/models';\nimport { Member } from '../../Player/models';\n\nexport class TurnBased {\n    constructor(public superThis: GameService) { }\n\n    // Functions\n    public async CreateRoom(options: CreateRoomOptions) {\n        if (this.superThis.GSLive.Command.commandToken == \"\")\n            throw \"User not connected to Command Server\";\n        if (this.superThis.GSLive.TurnbasedController.RoomID)\n            throw \"User is already in game room, please left from it first.\";\n\n        let data = new Data(this.superThis);\n        data.SetMax(options.maxPlayer);\n        data.SetMin(options.minPlayer);\n        data.SetName(options.roomName);\n        data.SetPassword(options.roomPassword!);\n        data.SetRole(options.role);\n        data.SetPersist(options.isPersist);\n        data.SetPrivate(options.isPrivate);\n        data.SetExtra(options.extra!);\n        data.SetSyncMode(1)\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionCreateRoom);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetData(data.ToString())\n        pkt.Send()\n    }\n\n    public async AutoMatch(options: AutoMatchOptions) {\n        if (this.superThis.GSLive.Command.commandToken == \"\")\n            throw \"User not connected to Command Server\";\n        if (this.superThis.GSLive.Command.isInAutoMatchQueue)\n            throw \"User is in automatch queue already\";\n        if (this.superThis.GSLive.TurnbasedController.RoomID)\n            throw \"User is already in game room, please left from it first.\";\n\n        let data = new Data(this.superThis);\n        data.SetMax(options.maxPlayer);\n        data.SetMin(options.minPlayer);\n        data.SetRole(options.role);\n        data.SetPersist(options.isPersist);\n        data.SetExtra(options.extra!);\n        data.SetSyncMode(1);\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionAutoMatch);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetData(data.ToString())\n        pkt.Send()\n    }\n\n    public async CancelAutoMatch() {\n        if (this.superThis.GSLive.Command.commandToken == \"\")\n            throw \"User not connected to Command Server\";\n        if (!this.superThis.GSLive.Command.isInAutoMatchQueue)\n            throw \"User is not in automatch queue\";\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.LeftWaitingQ);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.Send()\n    }\n\n    public async GetAvailableRooms(role: string, limit: number) {\n        if (this.superThis.GSLive.Command.commandToken == \"\")\n            throw \"User not connected to Command Server\";\n        let data = new Data(this.superThis);\n        data.SetMax(limit);\n        data.SetRole(role);\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionGetRooms);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetData(data.ToString());\n        pkt.Send()\n    }\n\n    public async JoinRoom(roomID: string, extra: string | undefined = undefined, password: string | undefined = undefined) {\n        if (this.superThis.GSLive.Command.commandToken == \"\")\n            throw \"User not connected to Command Server\";\n        if (this.superThis.GSLive.TurnbasedController.RoomID)\n            throw \"User is already in game room, please left from it first.\";\n\n        let data = new Data(this.superThis);\n        data.SetID(roomID);\n        data.SetExtra(extra!);\n        data.SetPassword(password!);\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionJoinRoom);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetData(data.ToString());\n        pkt.Send()\n    }\n\n    public async FindMember(query: string, limit: number) {\n        if (this.superThis.GSLive.Command.commandToken == \"\")\n            throw \"User not connected to Command Server\";\n\n        let data = new Data(this.superThis);\n        data.SetUser(query);\n        data.SetMax(limit);\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionFindUser);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetData(data.ToString());\n        pkt.Send()\n    }\n\n    public async InviteUser(roomID: string, userID: string) {\n        if (this.superThis.GSLive.Command.commandToken == \"\")\n            throw \"User not connected to Command Server\";\n\n        let data = new Data(this.superThis);\n        data.SetID(roomID);\n        data.SetUser(userID);\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionInviteUser);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetData(data.ToString());\n        pkt.Send()\n    }\n\n    public async GetInviteInbox() {\n        if (this.superThis.GSLive.Command.commandToken == \"\")\n            throw \"User not connected to Command Server\";\n\n        let data = new Data(this.superThis);\n        data.SetSyncMode(1);\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionGetInviteList);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetData(data.ToString());\n        pkt.Send()\n    }\n\n    public async AcceptInvite(inviteID: string, extra: string) {\n        if (this.superThis.GSLive.Command.commandToken == \"\")\n            throw \"User not connected to Command Server\";\n\n        if (this.superThis.GSLive.TurnbasedController.RoomID)\n            throw \"User is already in game room, please left from it first.\";\n\n        let data = new Data(this.superThis);\n        data.SetInvite(inviteID);\n        data.SetExtra(extra)\n\n        let pkt = new Packet(this.superThis);\n        pkt.SetHead(Actions.Command.ActionAcceptInvite);\n        pkt.SetToken(this.superThis.GSLive.Command.commandToken)\n        pkt.SetData(data.ToString());\n        pkt.Send();\n    }\n\n    public async GetCurrentRoomInfo() {\n        if (this.superThis.GSLive.TurnbasedController.RoomID.length < 1)\n            throw \"User is not in any game room\";\n\n        let pkt = new TurnPacket(this.superThis);\n        pkt.SetHead(Actions.TurnBased.GetRoomInfo);\n        pkt.SetToken(this.superThis.GSLive.TurnbasedController.turnbasedToken);\n        pkt.Send();\n    }\n\n    public async GetRoomMembersDetail() {\n        if (this.superThis.GSLive.TurnbasedController.RoomID.length < 1)\n            throw \"User is not in any game room\";\n\n        let pkt = new TurnPacket(this.superThis);\n        pkt.SetHead(Actions.TurnBased.ActionGetUsers);\n        pkt.SetToken(this.superThis.GSLive.TurnbasedController.turnbasedToken);\n        pkt.Send();\n    }\n\n    public async ChooseNext(whoIsNext: string | undefined = undefined) {\n        if (this.superThis.GSLive.TurnbasedController.RoomID.length < 1)\n            throw \"User is not in any game room\";\n\n        let data = new TurnData(this.superThis);\n        if (whoIsNext)\n            data.Next = whoIsNext;\n\n        let pkt = new TurnPacket(this.superThis);\n        pkt.SetHead(Actions.TurnBased.ActionChooseNext);\n        pkt.SetToken(this.superThis.GSLive.TurnbasedController.turnbasedToken);\n        pkt.SetData(data.ToString());\n        pkt.Send();\n    }\n\n    public async TakeTurn(data: string | undefined, whoIsNext: string | undefined = undefined) {\n        if (this.superThis.GSLive.TurnbasedController.RoomID.length < 1)\n            throw \"User is not in any game room\";\n\n        let dataIn = new TurnData(this.superThis);\n        if (whoIsNext)\n            dataIn.Next = whoIsNext;\n        dataIn.Data = data;\n\n        let pkt = new TurnPacket(this.superThis);\n        pkt.SetHead(Actions.TurnBased.ActionTakeTurn);\n        pkt.SetToken(this.superThis.GSLive.TurnbasedController.turnbasedToken);\n        pkt.SetData(dataIn.ToString());\n        pkt.Send();\n    }\n\n    public async GetCurrentTurnMember() {\n        if (this.superThis.GSLive.TurnbasedController.RoomID.length < 1)\n            throw \"User is not in any game room\";\n\n        let pkt = new TurnPacket(this.superThis);\n        pkt.SetHead(Actions.TurnBased.ActionCurrentTurnDetail);\n        pkt.SetToken(this.superThis.GSLive.TurnbasedController.turnbasedToken);\n        pkt.Send();\n    }\n\n    public async Vote(outcomes: { [memberID: string]: Outcome }) {\n        if (this.superThis.GSLive.TurnbasedController.RoomID.length < 1)\n            throw \"User is not in any game room\";\n\n        let dataIn = new TurnData(this.superThis);\n        let outcomesS: any = {};\n        Object.keys(outcomes).map(key => {\n            outcomesS[key] = {\n                \"0\": outcomes[key].Rank,\n                \"1\": `${outcomes[key].Value}`\n            }\n        })\n        dataIn.Outcomes = outcomesS;\n\n        let pkt = new TurnPacket(this.superThis);\n        pkt.SetHead(Actions.TurnBased.ActionVote);\n        pkt.SetToken(this.superThis.GSLive.TurnbasedController.turnbasedToken);\n        pkt.SetData(dataIn.ToString());\n        pkt.Send();\n    }\n\n    public async AcceptVote(memberID: string) {\n        if (this.superThis.GSLive.TurnbasedController.RoomID.length < 1)\n            throw \"User is not in any game room\";\n\n        let dataIn = new TurnData(this.superThis);\n        dataIn.ID = memberID;\n\n        let pkt = new TurnPacket(this.superThis);\n        pkt.SetHead(Actions.TurnBased.ActionAcceptVote);\n        pkt.SetToken(this.superThis.GSLive.TurnbasedController.turnbasedToken);\n        pkt.SetData(dataIn.ToString());\n        pkt.Send();\n    }\n\n    public async SetOrUpdateProperty(type: PropertyType, data: { name: string, value: string }) {\n        if (this.superThis.GSLive.TurnbasedController.RoomID.length < 1)\n            throw \"User is not in any game room\";\n\n        let dataIn = new TurnData(this.superThis);\n\n        dataIn.Head = 1;\n        if (type === PropertyType.Room)\n            dataIn.Head = 3;\n        if (!data.name || data.name.length < 5 || data.name.length > 32)\n            throw new Error(\"name of value should be between 5-32\");\n\n        if (!data.value || data.value.length > 1024)\n            throw new Error(\"value of value should less than 1024\");\n\n        dataIn.ID = data.name;\n        dataIn.Data = data.value;\n\n        let pkt = new TurnPacket(this.superThis);\n        pkt.SetHead(Actions.TurnBased.ModifyValue);\n        pkt.SetToken(this.superThis.GSLive.TurnbasedController.turnbasedToken);\n        pkt.SetData(dataIn.ToString());\n        pkt.Send();\n    }\n\n    public async RemoveProperty(type: PropertyType, name: string) {\n        if (this.superThis.GSLive.TurnbasedController.RoomID.length < 1)\n            throw \"User is not in any game room\";\n\n        let dataIn = new TurnData(this.superThis);\n\n        dataIn.Head = 2;\n        if (type === PropertyType.Room)\n            dataIn.Head = 4;\n        if (!name || name.length < 5 || name.length > 32)\n            throw new Error(\"name of value should be between 5-32\");\n\n\n        dataIn.ID = name;\n\n        let pkt = new TurnPacket(this.superThis);\n        pkt.SetHead(Actions.TurnBased.ModifyValue);\n        pkt.SetToken(this.superThis.GSLive.TurnbasedController.turnbasedToken);\n        pkt.SetData(dataIn.ToString());\n        pkt.Send();\n    }\n\n    public async LeaveRoom(whoIsNext: string | undefined = undefined) {\n        if (this.superThis.GSLive.TurnbasedController.RoomID.length < 1)\n            throw \"User is not in any game room\";\n\n        let data = new TurnData(this.superThis);\n        data.Next = whoIsNext;\n\n        let pkt = new TurnPacket(this.superThis);\n        pkt.SetHead(Actions.TurnBased.ActionLeave);\n        pkt.SetToken(this.superThis.GSLive.TurnbasedController.turnbasedToken);\n        pkt.SetData(data.ToString());\n        pkt.Send();\n    }\n\n    // Event handlers\n    public OnReconnected: (sender: object, reconnectStatus: boolean) => void = () => { };\n    public OnJoinedRoom: (join: any) => void = () => { };\n    public OnAutoMatchUpdated: (e: any) => void = () => { };\n    public OnAutoMatchCanceled: (e: string) => void = () => { };\n    public OnAvailableRoomsReceived: (sender: object, e: object[]) => void = () => { };\n    public OnFindMemberReceived: (sender: object, e: object[]) => void = () => { };\n    public OnInvitationSent: (e: object) => void = () => { };\n    public OnInviteInboxReceived: (invites: object[]) => void = () => { };\n    public OnCurrentRoomInfoReceived: (roomData: any) => void = () => { };\n    public OnRoomMembersDetailReceived: (members: any[]) => void = () => { };\n    public OnChoosedNext: (whoIsNext: object) => void = () => { };\n    public OnTakeTurn: (sender: object, turn: object) => void = () => { };\n    public OnCurrentTurnMember: (currentMember: Member) => void = () => { };\n    public OnVoteReceived: (sender: object, vote: object) => void = () => { };\n    public OnComplete: (gameResult: object) => void = () => { };\n    public OnPropertyUpdated: (payload: PropertyChange) => void = () => { };\n    public OnLeaveRoom: (member: any) => void = () => { };\n}","import { GameService } from '../../index';\n\nexport class Data {\n    constructor(public superThis: GameService) { }\n\n    Head: number | undefined\n    ID: string | undefined\n    Data: string | undefined\n    Next: string | undefined\n    Outcomes: object | undefined\n    Private: boolean | undefined\n\n    private Cast() {\n        return {\n            \"0\": this.Head,\n            \"1\": this.ID,\n            \"2\": this.Data,\n            \"3\": this.Next,\n            \"4\": this.Outcomes,\n            \"5\": this.Private,\n        }\n    }\n\n    ToString(): string {\n        return JSON.stringify(this.Cast())\n    }\n}\n\nexport enum PropertyType {\n    Room = \"room\",\n    Member = \"member\"\n}\n\nexport class CreateRoomOptions {\n    constructor() {\n        this.role = \"default\"\n        this.minPlayer = 2\n        this.maxPlayer = 2\n        this.isPersist = false\n        this.extra = undefined\n        this.isPrivate = false\n        this.roomPassword = undefined\n        this.roomName = \"default\"\n    }\n    roomName: string = \"default\"\n    role: string = \"default\"\n    minPlayer: number = 2\n    maxPlayer: number = 2\n    isPrivate: boolean = false\n    isPersist: boolean = false\n    extra: string | undefined\n    roomPassword: string | undefined\n}\n\nexport class AutoMatchOptions {\n    constructor() {\n        this.role = \"default\"\n        this.minPlayer = 2\n        this.maxPlayer = 2\n        this.isPersist = false\n        this.extra = null\n    }\n    role: string = \"default\"\n    minPlayer: number = 2\n    maxPlayer: number = 2\n    isPersist: boolean = false\n    extra: string | null\n}\n\nexport class Outcome {\n    private _Value: number | undefined;\n    public get Value(): number | undefined {\n        return this._Value;\n    }\n    public set Value(value: number | undefined) {\n        this._Value = value;\n    }\n    private _Rank: number | undefined;\n    public get Rank(): number | undefined {\n        return this._Rank;\n    }\n    public set Rank(value: number | undefined) {\n        this._Rank = value;\n    }\n}","import { GameService } from '..';\nimport { Chats } from '../GSLive/Chats/index';\nimport { TurnBased } from '../GSLive/TurnBased/index';\nimport { RealTime } from '../GSLive/RealTime/index';\n\nimport { Command } from './Controllers/Command';\nimport { TurnBased as TurnbasedController } from './Controllers/ُTurnBased';\nimport { RealTime as RealTimeController } from './Controllers/RealTime';\n\nimport nWebSocket from 'ws';\n\nexport class GSLive {\n    constructor(public superThis: GameService) {\n        // controllers\n        this.Command = new Command(superThis);\n        this.TurnbasedController = new TurnbasedController(superThis);\n        this.RealTimeController = new RealTimeController(superThis);\n\n        // functions\n        this.TurnBased = new TurnBased(superThis);\n        this.RealTime = new RealTime(superThis);\n        this.Chats = new Chats(superThis);\n    }\n\n    static CommandConnection: WebSocket | nWebSocket | undefined = undefined\n\n    IsCommandAvailable(): boolean {\n        return true\n    }\n    IsTurnBasedAvailable(): boolean {\n        return true\n    }\n    IsRealTimeAvailable(): boolean {\n        return true\n    }\n    GetPing(): number {\n        return 0\n    }\n\n    // Functions\n    public Chats: Chats\n    public TurnBased: TurnBased\n    public RealTime: RealTime\n\n    // Controllers\n    public Command: Command\n    public TurnbasedController: TurnbasedController\n    public RealTimeController: RealTimeController\n}","import { Leaderboard, SubmitScoreResponse, LeaderBoardDetails, Score } from './models';\nimport axios from 'axios';\nimport { GameService } from '..';\nimport { Url } from '../../Utils/Consts';\nimport { Log } from '../../Utils/Logger';\n\nexport class Leaderboards {\n    constructor(public superThis: GameService) { }\n\n    async GetLeaderBoards(): Promise<Leaderboard[]> {\n        try {\n            let { data } = await axios.get(`${Url.Api.Endpoint}${Url.Api.Leaderboard}`, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"GetLeaderBoards\", data);\n\n            return data.leaderboard;\n        } catch (e) {\n            console.error(e)\n            if (e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n    async SubmitScore(leaderboardId: string, score: number): Promise<SubmitScoreResponse> {\n        try {\n            let { data } = await axios.post(`${Url.Api.Endpoint}${Url.Api.LeaderboardV2}${leaderboardId}`, {\n                \"value\": score,\n            }, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"SubmitScore\", data);\n\n            return data.leaderboard;\n        } catch (e) {\n            if (e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n    async GetLeaderBoardDetails(leaderboardId: string, skip: number = 0, limit: number = 25): Promise<LeaderBoardDetails> {\n        try {\n            let { data } = await axios.get(`${Url.Api.Endpoint}${Url.Api.LeaderboardV2}${leaderboardId}?skip=${skip}&limit=${limit}`, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"GetLeaderBoardDetails\", data);\n\n            return { scores: data.scores, leaderboard: data.leaderboard };\n        } catch (e) {\n            if (e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n    async GetCurrentPlayerScore(leaderboardId: string): Promise<Score> {\n        try {\n            let { data } = await axios.get(`${Url.Api.Endpoint}${Url.Api.LeaderboardV2}${leaderboardId}/me`, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"GetCurrentPlayerScore\", data);\n\n            return data;\n        } catch (e) {\n            if (e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n\n}","import { Url } from '../../Utils/Consts';\nimport { Member, MemberInfo, Profile, ActiveDevice } from './models';\nimport { Log } from '../../Utils/Logger';\nimport axios from 'axios';\nimport { GameService } from '..';\nimport { v4 } from 'uuid';\n\nexport class Player {\n    constructor(public superThis: GameService) { }\n\n    async GetCurrentPlayer(): Promise<Member> {\n        try {\n            let { data } = await axios.get(`${Url.Api.Endpoint}${Url.Api.GetCurrentPlayer}`, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"GetCurrentPlayer\", data);\n\n            return data.data;\n        } catch (e) {\n            if (e && e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n    async GetMemberData(memberId: string): Promise<Member> {\n        try {\n            let { data } = await axios.get(`${Url.Api.Endpoint}${Url.Api.GetCurrentPlayer}/${memberId}`, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"GetCurrentPlayer\", data);\n\n            return data;\n        } catch (e) {\n            if (e && e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n    async GetLastLoginMemberInfo(): Promise<MemberInfo> {\n        try {\n            let { data } = await axios.post(`${Url.Api.Endpoint}${Url.Api.LastLoginInfo}`, {\n                \"game\": this.superThis.ClientID,\n                \"secret\": this.superThis.ClientSecret,\n                \"device_id\": v4()\n            }, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"GetLastLoginMemberInfo\", data);\n\n            return data;\n        } catch (e) {\n            if (e && e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n    async EditCurrentPlayerProfile(input: Profile): Promise<MemberInfo> {\n        try {\n            let { data } = await axios.put(`${Url.Api.Endpoint}${Url.Api.GetCurrentPlayer}`, {\n                // \"\":input.\n            }, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"EditCurrentPlayerProfile\", data);\n\n            return data;\n        } catch (e) {\n            if (e && e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n\n    }\n    async ChangePassword(currentPassword: string, newPassword: string): Promise<boolean> {\n        try {\n            let { data } = await axios.post(`${Url.Api.Endpoint}${Url.Api.GetCurrentUser}/changepassword`, {\n                \"old_password\": currentPassword,\n                \"new_password\": newPassword\n            }, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"ChangePassword\", data);\n\n            return data.data;\n        } catch (e) {\n            if (e && e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n    async GetActiveDevices(): Promise<ActiveDevice[]> {\n        try {\n            let { data } = await axios.get(`${Url.Api.Endpoint}${Url.Api.Devices}`, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"GetActiveDevices\", data);\n\n            return data;\n        } catch (e) {\n            console.error(e)\n            if (e && e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n    async RevokeActiveDevice(deviceId: string): Promise<boolean> {\n        try {\n            let { data } = await axios.post(`${Url.Api.Endpoint}${Url.Api.Devices}/${deviceId}`, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"RevokeActiveDevice\", data);\n\n            return true;\n        } catch (e) {\n            if (e && e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n}","import { SaveDetails } from './models';\nimport axios from 'axios';\nimport { GameService } from '..';\nimport { Url } from '../../Utils/Consts';\nimport { Log } from '../../Utils/Logger';\n\nexport class Save {\n    constructor(public superThis: GameService) { }\n\n    async Set(saveName: string, saveData: string | object): Promise<SaveDetails> {\n        try {\n            if (typeof saveData === \"object\")\n                saveData = JSON.stringify(saveData);\n            let { data } = await axios.post(`${Url.Api.Endpoint}${Url.Api.SaveGame}`, {\n                \"data\": saveData,\n                \"name\": saveName\n            }, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"SetSave\", data);\n\n            return data.new;\n        } catch (e) {\n            if (e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n    async Get(saveName: string = \"\"): Promise<object | string> {\n        try {\n            let { data } = await axios.get(`${Url.Api.Endpoint}${Url.Api.SaveGame}${saveName}`, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"GetSave\", data);\n\n            return data;\n        } catch (e) {\n            if (e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n    async Remove(saveName: string): Promise<boolean> {\n        try {\n            let { data } = await axios.delete(`${Url.Api.Endpoint}${Url.Api.SaveGame}${saveName}`, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"RemoveSave\", data);\n\n            return true;\n        } catch (e) {\n            if (e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n}","import { Member } from '../../Player/models';\nimport { FriendData } from './models';\nimport { GameService } from '../..';\nimport { Url } from '../../../Utils/Consts';\nimport { Log } from '../../../Utils/Logger';\nimport axios from 'axios';\n\nexport class Friends {\n    constructor(public superThis: GameService) { }\n\n    async FindMembers(query: string, skip: number = 0, limit: number = 25): Promise<[number, Member[]]> {\n        try {\n            let url = `${Url.Api.Endpoint}${Url.Api.Friends}?q=${query}&skip=${skip}&limit=${limit}`\n            let { data } = await axios.get(url, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"FindMembers\", data);\n\n            return [data.count, data.list];\n        } catch (e) {\n            if (e && e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n    async GetMyFriends(skip: number = 0, limit: number = 25): Promise<[number, Member[]]> {\n        try {\n            let url = `${Url.Api.Endpoint}${Url.Api.Friends}/me?skip=${skip}&limit=${limit}`\n            let { data } = await axios.get(url, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"GetMyFriends\", data);\n\n            return [data.count, data.list];\n        } catch (e) {\n            if (e && e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n    async GetFriendRequests(skip: number = 0, limit: number = 25): Promise<[number, FriendData[]]> {\n        try {\n            let url = `${Url.Api.Endpoint}${Url.Api.Friends}/me/pending?skip=${skip}&limit=${limit}`\n            let { data } = await axios.get(url, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"GetFriendRequests\", data);\n\n            return [data.count, data.list];\n        } catch (e) {\n            if (e && e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n    async SendFriendRequest(memberId: string): Promise<boolean> {\n        try {\n            let url = `${Url.Api.Endpoint}${Url.Api.Friends}/${memberId}`\n            let { data } = await axios.post(url, undefined, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"SendFriendRequest\", data);\n\n            return data.status;\n        } catch (e) {\n            if (e && e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n    async AcceptFriendRequest(memberId: string): Promise<boolean> {\n        try {\n            let url = `${Url.Api.Endpoint}${Url.Api.Friends}/${memberId}`\n            let { data } = await axios.put(url, undefined, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"AcceptFriendRequest\", data);\n\n            return data.status;\n        } catch (e) {\n            if (e && e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n    async DeleteFriend(memberId: string): Promise<boolean> {\n        try {\n            let url = `${Url.Api.Endpoint}${Url.Api.Friends}/${memberId}`\n            let { data } = await axios.put(url, undefined, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"AcceptFriendRequest\", data);\n\n            return data.status;\n        } catch (e) {\n            if (e && e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n}","import { Friends } from './Friends/index';\nimport { GameService } from '..';\n\nexport class Social {\n    constructor(public superThis: GameService) {\n        this.Friends = new Friends(superThis);\n    }\n\n    public Friends: Friends\n}","import { GetTableItemsOptions } from './models';\nimport axios from 'axios';\nimport { GameService } from '..';\nimport { Url } from '../../Utils/Consts';\nimport { Log } from '../../Utils/Logger';\n\nexport class Table {\n    constructor(public superThis: GameService) { }\n\n    async GetTableItems(tableId: String, isGlobal: Boolean = false, options: GetTableItemsOptions = { skip: 0, limit: 25, find: undefined, rowsOwner: undefined, sort: undefined }): Promise<object[]> {\n        try {\n            let url = `${Url.Api.Endpoint}${Url.Api.Table}${tableId}?skip=${options.skip}&limit=${options.limit}`\n            if (options.rowsOwner && options.rowsOwner != \"\")\n                url += `&owner=${options.rowsOwner}`\n            if (options.sort && options.sort[0] && options.sort[1] && options.sort[0] != \"\")\n                url += `&sort=${options.sort[0]}&sortby=${options.sort[1]}`\n            if (options.find && options.find[0] && options.find[1] && options.find[0] != \"\")\n                url += `&conditionProperty=${options.find[0]}&conditionValue=${options.find[1]}`\n            let { data } = await axios.get(url, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"GetTableItems\", data);\n\n            return data;\n        } catch (e) {\n            if (e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n\n    Aggrigation(aggrigation: object) {\n\n    }\n\n    async GetTableItem(tableId: string, itemId: number, isGlobal: boolean = false): Promise<object> {\n        try {\n            let url = `${Url.Api.Endpoint}${Url.Api.Table}${tableId}/${itemId}`\n            let { data } = await axios.get(url, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"GetTableItem\", data);\n\n            return data.data;\n        } catch (e) {\n            if (e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n\n    async AddItemToTable(tableId: string, newItem: object) {\n        try {\n            let url = `${Url.Api.Endpoint}${Url.Api.Table}${tableId}`\n            let { data } = await axios.post(url, newItem, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"AddItemToTable\", data);\n\n            return data.data;\n        } catch (e) {\n            if (e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n\n    async UpdateTableItem(tableId: string, itemId: number, editedItem: object): Promise<object> {\n        try {\n            let url = `${Url.Api.Endpoint}${Url.Api.Table}${tableId}/${itemId}`\n            let { data } = await axios.put(url, editedItem, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"UpdateTableItem\", data);\n\n            return data.data;\n        } catch (e) {\n            if (e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n\n    async DeleteTableItem(tableId: string, itemId: number): Promise<boolean> {\n        try {\n            let url = `${Url.Api.Endpoint}${Url.Api.Table}${tableId}/${itemId}`\n            let { data } = await axios.delete(url, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"DeleteTableItem\", data);\n\n            return data.status;\n        } catch (e) {\n            if (e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n\n    async DeleteAllTableItems(tableId: string): Promise<boolean> {\n        try {\n            let url = `${Url.Api.Endpoint}${Url.Api.Table}${tableId}`\n            let { data } = await axios.delete(url, {\n                headers: {\n                    \"x-access-token\": this.superThis.Authentication.gameToken\n                }\n            })\n\n            Log(\"DeleteTableItems\", data);\n\n            return data.status;\n        } catch (e) {\n            if (e.response) {\n                throw e.response.data.msg\n            } else\n                throw e\n        }\n    }\n}","import { Authentication } from \"./Authentication/index\";\nimport Errors from '../Utils/Errors';\nimport { Assets } from \"./Assets/index\";\nimport { Leaderboards } from \"./Leaderboards/index\";\nimport { Achievements } from \"./Achievements/index\";\nimport { Player } from \"./Player/index\";\nimport { Save } from \"./Save/index\";\nimport { Table } from \"./Table/index\";\nimport { GSLive } from \"./GSLive/index\";\nimport { Social } from \"./Social/index\";\n\nexport class GameService {\n\n    ClientID: string = \"\";\n    ClientSecret: string = \"\";\n    Verbose: boolean = false;\n\n    constructor(clientId: string, clientSecret: string, Verbose: boolean = true) {\n        if (typeof clientId !== 'string' || typeof clientSecret !== 'string')\n            throw new Error(Errors.Internal.InvalidInput)\n\n        this.ClientID = clientId;\n        this.ClientSecret = clientSecret;\n        this.Verbose = Verbose;\n\n        this.Authentication = new Authentication(this)\n        this.Assets = new Assets(this)\n        this.Achievements = new Achievements(this)\n        this.Leaderboards = new Leaderboards(this)\n        this.Player = new Player(this)\n        this.Save = new Save(this)\n        this.Table = new Table(this)\n        this.GSLive = new GSLive(this)\n        this.Social = new Social(this)\n    }\n\n    IsAuthenticated(): boolean {\n        return this.Authentication.gameToken != \"\"\n    }\n\n\n    IsCommandAvailabe(): boolean {\n        return GSLive.CommandConnection?.readyState === WebSocket.OPEN && this.GSLive.Command.commandToken != \"\"\n    }\n\n    // Functions \n    Authentication: Authentication\n    Assets: Assets\n    Achievements: Achievements\n    Leaderboards: Leaderboards\n    Player: Player\n    Save: Save\n    Table: Table\n    GSLive: GSLive\n    Social: Social\n\n    // Events\n    onReady: Function = () => { }\n}\n","enum ApiUrls {\n    Endpoint = \"https://api.gamesservice.ir\",\n    // Endpoint = \"http://localhost:4001\",\n\n    Login = \"/auth/app/login\",\n    Start = \"/auth/start\",\n    SMSAuth = \"/auth/phone\",\n    SMSAuthCallback = \"/Auth/phone/callback\",\n    GetCurrentPlayer = \"/v1/member/\",\n    GetCurrentUser = \"/v1/User\",\n    LastLoginInfo = \"/auth/app/login/info\",\n    Devices = \"/v1/devices\",\n    GetAchievements = \"/v1/achievement\",\n    GetAchievementsv2 = \"/v2/achievement\",\n    DownloadAssets = \"/game/\",\n    SaveGame = \"/v1/savegame/\",\n    Leaderboard = \"/v1/leaderboard/\",\n    LeaderboardV2 = \"/v2/leaderboard/\",\n    Table = \"/v1/bucket/\",\n    Friends = \"/v1/friends\"\n}\n\nenum DBaaSUrls {\n    Endpoint = \"https://dbaas.gamesservice.ir\",\n}\n\nenum CommandUrls {\n    // Endpoint = \"wss://command-ws.gamesservice.ir\",\n    Endpoint = \"ws://localhost:3004\",\n}\n\n\nlet Url = {\n    Api: ApiUrls,\n    DBaaS: DBaaSUrls,\n    Command: CommandUrls,\n}\n\nenum CommandActions {\n    ActionAuth = 0,\n    ActionAutoMatch = 1,\n    ActionCreateRoom = 2,\n    ActionGetRooms = 3,\n    ActionJoinRoom = 4,\n    ActionPing = 5,\n    ActionInviteUser = 6,\n    ActionKickUser = 7,\n    ActionGetInviteList = 8,\n    ActionAcceptInvite = 9,\n    ActionFindUser = 10,\n    ActionNotification = 11,\n    ActionInviteNotif = 15,\n    ActionMirror = 99,\n    LeftWaitingQ = 16,\n\n    // chat service\n    ActionSubscribe = 12,\n    ActionPrivateChat = 18,\n    ActionChat = 13,\n    ActionUnSubscribe = 14,\n    ActionGetSubscribedChannels = 17,\n    ActionGetMembersOfChannel = 19,\n    ActionGetLastGroupMessages = 20,\n    ActionGetPendingMessages = 21,\n}\n\nenum TurnBasedActions {\n    ActionAuth = 1,\n    ActionPing = 2,\n    ActionCreate = 10,\n    ActionJoin = 11,\n    ActionTakeTurn = 4,\n    ActionChooseNext = 5,\n    ActionLeave = 6,\n    ActionVote = 7,\n    ActionAcceptVote = 8,\n    ActionGetUsers = 9,\n    ActionCurrentTurnDetail = 12,\n    ModifyValue = 13,\n    ModifyRoomValue = 16,\n    GetRoomInfo = 14,\n    GetMemberSnapShot = 15,\n}\n\nenum RealTimeActions {\n    ActionAuth = 1,\n    ActionData = 2,\n    ActionPublicMessage = 3,\n    ActionPrivateMessage = 4,\n    ActionJoin = 5,\n    ActionMembersDetail = 6,\n    ActionLeave = 7,\n    ActionDestroy = 8,\n    ActionStatus = 9,\n    ActionMirror = 10,\n    ActionEventMessage = 11,\n    ActionGetRoomSnapshot = 12,\n    ActionObserver = 13,\n    ActionRoomInfo = 14,\n}\n\nlet Actions = {\n    Command: CommandActions,\n    TurnBased: TurnBasedActions,\n    RealTime: RealTimeActions,\n    Error: 100\n}\n\nexport { Url, Actions };\n","\nenum Internal {\n    InvalidInput = \"Check input parameters of function\"\n}\n\nenum Command{\n    INVALID_ID = \"Request input's are not valid\"\n}\n\nexport default {\n    Internal,\n    Command\n}","export function Log(location: string, input: any) {\n    console.log(location, input);\n}","import { v4 } from 'uuid';\n\nexport function get() {\n    let statis = {\n        // PackageName:,\n        // SDKVersion:,\n        // VersionName:,\n        // VersionCode:,\n        // OSAPILevel:,\n        // Device:,\n        DeviceID: v4(),\n        // From:,\n        // Model:,\n        // Product:,\n        // CarrierName:,\n        // Manufacturer:,\n        // OtherTAGS:,\n        // ScreenWidth:,\n        // ScreenHeight:,\n        // SDCardState:,\n        // GameOrientation:,\n        // NetworkType:,\n        // MACAddress:,\n        // IPAddress:,\n        // DeviceName:,\n        // DeviceModel:,\n        // DeviceType:,\n        // OperatingSystem:,\n        // ProcessorType:,\n        // ProcessorCount:,\n        // ProcessorFrequency:,\n        // GraphicsDeviceName:,\n        // GraphicsDeviceVendor:,\n        // GraphicsMemorySize:\n    };\n    return JSON.stringify(statis);\n}","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","'use strict';\n\nmodule.exports = function () {\n  throw new Error(\n    'ws does not work in the browser. Browser clients must use the native ' +\n      'WebSocket object'\n  );\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { GameService } from './GameService/index';\nexport default GameService"],"sourceRoot":""}